!function(){"use strict";var e,t={836:function(e,t,a){var n=a(294),l=a(935),i=a(472),r=a(460);function c(){return n.createElement(n.Fragment,null,n.createElement("h1",{className:"title"},"Evgenii Ashikhmin"),n.createElement("p",{className:"desc"},"Frontend developer — JavaScript, TypeScript, React"),n.createElement("ul",null,n.createElement("li",null,"Занимаюсь разработкой пользовательских интерфейсов и приложений."),n.createElement("li",null,"Frontend разработчик с 3 годами опыта в веб-разработке, с акцентом на React"),n.createElement("li",null," В IT сфере работаю более 7 лет"),n.createElement("li",null,"Есть опыт работы с кроссбраузерностью, W3C валидной и семантичной разметкой"),n.createElement("li",null," Опыт работы с методологией SCRUM agile"),n.createElement("li",null,"Базовый опыт в устранении неполадок, оптимизации производительности и устранении ошибок"),n.createElement("li",null,"Опыт работы с отзывчивым, адаптивным дизайном"),n.createElement("li",null,"В настоящее время изучаю Node.js")))}const s={Frontend:[{name:"JavaScript (ES6+)",highlight:!0},{name:"TypeScript",highlight:!0},{name:"ReactJS",highlight:!0},{name:"CSS"},{name:"Redux"},{name:"styled-components"},{name:"GraphQL"},{name:"Apollo"},{name:"MobX"},{name:"Stylus"},{name:"SCSS"},{name:"Webpack",highlight:!0},{name:"Parcel"},{name:"Gulp"}],"Backend and Database":[{name:"Node.js",highlight:!0},{name:"Express.js"},{name:"Sequelize"},{name:"MySQL"},{name:"PostgreSQL"}],"Dev tools":[{name:"WebStorm",highlight:!0},{name:"Visual Studio Code"},{name:"Git"},{name:"PowerShell"},{name:"Postman"}]},o=[{company:"innotech",companyLink:"https://inno.tech/",position:"Frontend developer",dateStart:"april 2022",dateEnd:"current time",responsibilities:["Поддержка и доработка продукта (формы, баги, доступность)","Перевод текущего продукта на микросервисное взаимодействие","Перевод функционала продукта с CRM Seibel на архитектуру микрофронтендов","Менторинг джуниор-разработчика"],technologies:["TypeScript","React","Redux","JavaScript","styled-components","React Query","Figma","TeamCity","BitBucket","Git"]},{company:"EPAM Systems Inc.",companyLink:"https://www.epam.com/",position:"Frontend developer",dateStart:"june 2021",dateEnd:"april 2022",responsibilities:["Разработка нового продукта «Подписки на авто» для долгосрочной аренды с нуля до продакшена","Работа с A11y (accessebility)","Кроссбраузерная верстка"],technologies:["React","TypeScript","Redux","JavaScript","CSS-in-JS","Figma Design","TeamCity","Git"]},{company:"LLC Gazprom Neft – Digital Solutions",companyLink:"https://www.gazprom-neft.ru/",position:"Frontend developer",dateStart:"january 2021",dateEnd:"june 2021",responsibilities:["Разработка интерфейса распределенной системы контроля и прогнозирования разработки новых месторождений, нефтедобычи + формирования отчетности по имеющимся.","Поддержка и доработка системы дашбордов (инфосервис с различными графиками и составлением отчетов)"],technologies:["TypeScript","ReactJS","Git","JavaScript","GraphQL","CSS","Webpack","Apollo","Docker","G2 Plot","Ant Design Charts"]},{company:"Kontur",companyLink:"https://kontur-inc.com/",position:"Software Engineer (web)",dateStart:"september 2019",dateEnd:"december 2020",responsibilities:["Разработка интерфейсов систем формирования и отправки электронной отчетности с персональными данными с подписанием электронной подписью","Разработал форму с валидациями и кросс-проверками на React + TS + Redux для заполнения отчетности в ФНС","Перевод проекта на React с Razor (CSharp) + JQuery + knockout.js","Оптимизировал процесс сборки приложения из нескольких репозиториев (время сборки уменьшилось с 30 минут до 5 минут"],technologies:["Typescript"," ReactJS"," Redux"," Git"," JavaScript"," JQuery"," Stylus"," CSS"," Webpack"," pnpm"," PowerShell"," Razor (CSharp)"]}];var m=()=>n.createElement(n.Fragment,null,Object.keys(s).map((e=>n.createElement(n.Fragment,{key:e},n.createElement("div",{className:"skillTitle"},e),n.createElement("div",{className:"skillNames"},s[e].map((e=>n.createElement("div",{key:e.name,className:"skillName "+(e.highlight?"highlight":"")},e.name)))))))),p=()=>n.createElement("div",{className:"experiencesWrapper"},o.map((e=>n.createElement("div",{key:e.company,className:"experienceWrapper"},n.createElement("div",{className:"experienceDate"},n.createElement("div",null,e.dateEnd),n.createElement("div",{className:"dash"},"⮌"),n.createElement("div",null,e.dateStart)),n.createElement("div",{className:"experienceInfo"},n.createElement("div",{className:"companyInfo"},n.createElement("div",{className:"company"},e.company),n.createElement("a",{href:e.companyLink,target:"_blank",className:"link",title:`go to ${e.company} site`,rel:"noreferrer"},n.createElement("svg",{className:"linkicon",xmlns:"http://www.w3.org/2000/svg",fill:"currentColor",viewBox:"0 0 16 16",width:16,height:16},n.createElement("path",{d:"M4.715 6.542 3.343 7.914a3 3 0 1 0 4.243 4.243l1.828-1.829A3 3 0 0 0 8.586 5.5L8 6.086a1.002 1.002 0 0 0-.154.199 2 2 0 0 1 .861 3.337L6.88 11.45a2 2 0 1 1-2.83-2.83l.793-.792a4.018 4.018 0 0 1-.128-1.287z"}),n.createElement("path",{d:"M6.586 4.672A3 3 0 0 0 7.414 9.5l.775-.776a2 2 0 0 1-.896-3.346L9.12 3.55a2 2 0 1 1 2.83 2.83l-.793.792c.112.42.155.855.128 1.287l1.372-1.372a3 3 0 1 0-4.243-4.243L6.586 4.672z"})),e.companyLink),n.createElement("div",{className:"position"},e.position)),n.createElement("ul",null,e.responsibilities.map((e=>n.createElement("li",{key:e},e)))),n.createElement("div",null,e.technologies.map((e=>n.createElement("span",{key:e,className:"technology"},e)))))))));const h=n.memo((({nav:e})=>{switch(e){case"main":default:return n.createElement(c,null);case"skills":return n.createElement(m,null);case"experience":return n.createElement(p,null)}}));h.displayName="CurrentInfo";const u={tension:1200,friction:40},d={mass:10,tension:190,friction:50},v=(e,t)=>`translate3d(${e}px,${t}px,0) translate3d(-50%,-50%,0)`;var g=({nav:e})=>{const[t,a]=(0,i.useTrail)(3,(e=>({xy:[0,0],config:0===e?u:d}))),[l,{left:c,top:s}]=(0,r.Z)(),o=e=>{a.start({xy:[e.clientX-c,e.clientY-s]})};return n.createElement("main",{className:"main"},n.createElement("svg",{style:{position:"absolute",width:0,height:0}},n.createElement("filter",{id:"allowemptyinput"},n.createElement("feGaussianBlur",{in:"SourceGraphic",result:"blur",stdDeviation:"35"}),n.createElement("feColorMatrix",{in:"blur",values:"1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 30 -7"}))),n.createElement("div",{ref:l,className:"hooks-main",onMouseMove:o},t.map((({xy:e},t)=>n.createElement(i.animated.div,{key:t,style:{transform:e.to(v)}})))),n.createElement("div",{className:"greet",onMouseMove:o},n.createElement(h,{nav:e})))},E=({nav:e,changeNav:t})=>{const a=e=>{e.stopPropagation(),e.preventDefault();const a=e.target;t(a.id)};return n.createElement("header",null,n.createElement("nav",{className:"nav"},n.createElement("div",{className:"links"},n.createElement("button",{className:"monogram logolink "+("main"===e?"logolink-active":""),id:"main",onClick:a},"EA"),n.createElement("button",{className:"link "+("skills"===e?"link-active":""),id:"skills",onClick:a},"Skills"),n.createElement("button",{className:"link "+("experience"===e?"link-active":""),id:"experience",onClick:a},"Experience")),n.createElement("div",{className:"links"},n.createElement("a",{className:"social",href:"https://t.me/allowemptyinput",title:"telegram",target:"_blank",rel:"noreferrer"},n.createElement("svg",{width:16,height:16,className:"socialicon",xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 16 16"},n.createElement("path",{d:"M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0zM8.287 5.906c-.778.324-2.334.994-4.666 2.01-.378.15-.577.298-.595.442-.03.243.275.339.69.47l.175.055c.408.133.958.288 1.243.294.26.006.549-.1.868-.32 2.179-1.471 3.304-2.214 3.374-2.23.05-.012.12-.026.166.016.047.041.042.12.037.141-.03.129-1.227 1.241-1.846 1.817-.193.18-.33.307-.358.336a8.154 8.154 0 0 1-.188.186c-.38.366-.664.64.015 1.088.327.216.589.393.85.571.284.194.568.387.936.629.093.06.183.125.27.187.331.236.63.448.997.414.214-.02.435-.22.547-.82.265-1.417.786-4.486.906-5.751a1.426 1.426 0 0 0-.013-.315.337.337 0 0 0-.114-.217.526.526 0 0 0-.31-.093c-.3.005-.763.166-2.984 1.09z"}))),n.createElement("a",{className:"social",href:"https://github.com/ashmee",title:"github",target:"_blank",rel:"noreferrer"},n.createElement("svg",{width:16,height:16,className:"socialicon",xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 16 16"},n.createElement("path",{d:"M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27.68 0 1.36.09 2 .27 1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0 .21.15.46.55.38A8.012 8.012 0 0 0 16 8c0-4.42-3.58-8-8-8z"}))),n.createElement("a",{className:"social",href:"https://www.linkedin.com/in/evg-ash/",title:"linkedin",target:"_blank",rel:"noreferrer"},n.createElement("svg",{width:16,height:16,className:"socialicon",xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 16 16"},n.createElement("path",{d:"M0 1.146C0 .513.526 0 1.175 0h13.65C15.474 0 16 .513 16 1.146v13.708c0 .633-.526 1.146-1.175 1.146H1.175C.526 16 0 15.487 0 14.854V1.146zm4.943 12.248V6.169H2.542v7.225h2.401zm-1.2-8.212c.837 0 1.358-.554 1.358-1.248-.015-.709-.52-1.248-1.342-1.248-.822 0-1.359.54-1.359 1.248 0 .694.521 1.248 1.327 1.248h.016zm4.908 8.212V9.359c0-.216.016-.432.08-.586.173-.431.568-.878 1.232-.878.869 0 1.216.662 1.216 1.634v3.865h2.401V9.25c0-2.22-1.184-3.252-2.764-3.252-1.274 0-1.845.7-2.165 1.193v.025h-.016a5.54 5.54 0 0 1 .016-.025V6.169h-2.4c.03.678 0 7.225 0 7.225h2.4z"}))),n.createElement("a",{className:"social",href:"tel:+79826540671",title:"mobile phone"},n.createElement("svg",{width:16,height:16,className:"socialicon",xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 16 16"},n.createElement("path",{fillRule:"evenodd",d:"M1.885.511a1.745 1.745 0 0 1 2.61.163L6.29 2.98c.329.423.445.974.315 1.494l-.547 2.19a.678.678 0 0 0 .178.643l2.457 2.457a.678.678 0 0 0 .644.178l2.189-.547a1.745 1.745 0 0 1 1.494.315l2.306 1.794c.829.645.905 1.87.163 2.611l-1.034 1.034c-.74.74-1.846 1.065-2.877.702a18.634 18.634 0 0 1-7.01-4.42 18.634 18.634 0 0 1-4.42-7.009c-.362-1.03-.037-2.137.703-2.877L1.885.511z"}))),n.createElement("a",{className:"social",href:"mailto:ashmee90@gmail.com",title:"email"},n.createElement("svg",{className:"socialicon",xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 16 16",width:16,height:16},n.createElement("path",{d:"M.05 3.555A2 2 0 0 1 2 2h12a2 2 0 0 1 1.95 1.555L8 8.414.05 3.555ZM0 4.697v7.104l5.803-3.558L0 4.697ZM6.761 8.83l-6.57 4.027A2 2 0 0 0 2 14h12a2 2 0 0 0 1.808-1.144l-6.57-4.027L8 9.586l-1.239-.757Zm3.436-.586L16 11.801V4.697l-5.803 3.546Z"}))))))};l.render(n.createElement(n.StrictMode,null,n.createElement((function(){const[e,t]=(0,n.useState)("experience");return n.createElement("div",{className:"app"},n.createElement(E,{nav:e,changeNav:t}),n.createElement(g,{nav:e}))}),null)),document.getElementById("root"))}},a={};function n(e){var l=a[e];if(void 0!==l)return l.exports;var i=a[e]={exports:{}};return t[e](i,i.exports,n),i.exports}n.m=t,e=[],n.O=function(t,a,l,i){if(!a){var r=1/0;for(m=0;m<e.length;m++){a=e[m][0],l=e[m][1],i=e[m][2];for(var c=!0,s=0;s<a.length;s++)(!1&i||r>=i)&&Object.keys(n.O).every((function(e){return n.O[e](a[s])}))?a.splice(s--,1):(c=!1,i<r&&(r=i));if(c){e.splice(m--,1);var o=l();void 0!==o&&(t=o)}}return t}i=i||0;for(var m=e.length;m>0&&e[m-1][2]>i;m--)e[m]=e[m-1];e[m]=[a,l,i]},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,{a:t}),t},n.d=function(e,t){for(var a in t)n.o(t,a)&&!n.o(e,a)&&Object.defineProperty(e,a,{enumerable:!0,get:t[a]})},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},function(){var e={179:0};n.O.j=function(t){return 0===e[t]};var t=function(t,a){var l,i,r=a[0],c=a[1],s=a[2],o=0;if(r.some((function(t){return 0!==e[t]}))){for(l in c)n.o(c,l)&&(n.m[l]=c[l]);if(s)var m=s(n)}for(t&&t(a);o<r.length;o++)i=r[o],n.o(e,i)&&e[i]&&e[i][0](),e[i]=0;return n.O(m)},a=self.webpackChunkashmee_github_io=self.webpackChunkashmee_github_io||[];a.forEach(t.bind(null,0)),a.push=t.bind(null,a.push.bind(a))}();var l=n.O(void 0,[736],(function(){return n(836)}));l=n.O(l)}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
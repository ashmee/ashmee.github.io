!function(){"use strict";var e,t={289:function(e,t,n){var r=n(294),o=n(935),i=n(863),l=n(531),a={tension:1200,friction:40},u={mass:10,tension:200,friction:50},c=function(e,t){return"translate3d("+e+"px,"+t+"px,0) translate3d(-50%,-50%,0)"},s=function(){var e=(0,i.NI)(3,(function(){return{xy:[0,0],config:function(e){return 0===e?a:u}}})),t=e[0],n=e[1];return r.createElement("main",{className:"main"},r.createElement(l.AM,{delay:3,from:{opacity:0},to:{opacity:1}},(function(e){return r.createElement(r.Fragment,null,r.createElement("div",{style:e},"ðŸ‘‹ Hey there!"),r.createElement("div",null,"I'm Eugene, frontend developer from Russia"),r.createElement("div",null,"Site will be launched soon! Stay tuned!"))})),r.createElement("div",{className:"circle"},r.createElement("svg",{style:{position:"absolute",width:0,height:0}},r.createElement("filter",{id:"goo"},r.createElement("feGaussianBlur",{in:"SourceGraphic",result:"blur",stdDeviation:"30"}),r.createElement("feColorMatrix",{in:"blur",values:"1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 30 -7"}))),r.createElement("div",{className:"hooks-main",onMouseMove:function(e){return n({xy:[e.clientX,e.clientY]})}},t.map((function(e,t){var n;return r.createElement(i.q.div,{key:t,style:{transform:null===(n=null==e?void 0:e.xy)||void 0===n?void 0:n.interpolate(c)}})})))))};o.render(r.createElement(r.StrictMode,null,r.createElement((function(){return r.createElement("div",{className:"app"},r.createElement(s,null))}),null)),document.getElementById("root"))}},n={};function r(e){var o=n[e];if(void 0!==o)return o.exports;var i=n[e]={exports:{}};return t[e](i,i.exports,r),i.exports}r.m=t,e=[],r.O=function(t,n,o,i){if(!n){var l=1/0;for(c=0;c<e.length;c++){n=e[c][0],o=e[c][1],i=e[c][2];for(var a=!0,u=0;u<n.length;u++)(!1&i||l>=i)&&Object.keys(r.O).every((function(e){return r.O[e](n[u])}))?n.splice(u--,1):(a=!1,i<l&&(l=i));a&&(e.splice(c--,1),t=o())}return t}i=i||0;for(var c=e.length;c>0&&e[c-1][2]>i;c--)e[c]=e[c-1];e[c]=[n,o,i]},r.d=function(e,t){for(var n in t)r.o(t,n)&&!r.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:t[n]})},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},function(){var e={179:0};r.O.j=function(t){return 0===e[t]};var t=function(t,n){var o,i,l=n[0],a=n[1],u=n[2],c=0;for(o in a)r.o(a,o)&&(r.m[o]=a[o]);for(u&&u(r),t&&t(n);c<l.length;c++)i=l[c],r.o(e,i)&&e[i]&&e[i][0](),e[l[c]]=0;r.O()},n=self.webpackChunkashmee_github_io=self.webpackChunkashmee_github_io||[];n.forEach(t.bind(null,0)),n.push=t.bind(null,n.push.bind(n))}();var o=r.O(void 0,[736],(function(){return r(289)}));o=r.O(o)}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
!function(){"use strict";var e,t={836:function(e,t,n){var a=n(294),i=n(935),r=n(472),l=n(460);function o(){return a.createElement(a.Fragment,null,a.createElement("h1",{className:"title"},"Evgenii Ashikhmin"),a.createElement("p",{className:"desc"},"Frontend developer — JavaScript, TypeScript, React"),a.createElement("ul",null,a.createElement("li",null,"I am engaged in the development of user interfaces and applications"),a.createElement("li",null,"Frontend developer with 3 years of experience in web development, with an emphasis on React"),a.createElement("li",null,"Working in IT sphere for more than 7 years"),a.createElement("li",null,"Have experience with cross-browser, W3C valid and semantic markup"),a.createElement("li",null,"Experience with SCRUM agile methodology"),a.createElement("li",null,"Basic experience in troubleshooting, performance optimization, and bug fixing"),a.createElement("li",null,"Experience with responsive, adaptive design"),a.createElement("li",null,"Currently, studying Node.js")))}const c={Frontend:[{name:"JavaScript (ES6+)",highlight:!0},{name:"TypeScript",highlight:!0},{name:"ReactJS",highlight:!0},{name:"CSS"},{name:"Redux"},{name:"styled-components"},{name:"GraphQL"},{name:"Apollo"},{name:"MobX"},{name:"Stylus"},{name:"SCSS"},{name:"Webpack",highlight:!0},{name:"Parcel"},{name:"Gulp"}],"Backend and Database":[{name:"Node.js",highlight:!0},{name:"Express.js"},{name:"Sequelize"},{name:"MySQL"},{name:"PostgreSQL"}],"Dev tools":[{name:"WebStorm",highlight:!0},{name:"Visual Studio Code"},{name:"Git"},{name:"PowerShell"},{name:"Postman"}]},s=[{company:"INNOTECH",companyLink:"https://inno.tech/",position:"Frontend developer",dateStart:"april 2022",dateEnd:"current time",responsibilities:["Product support and enhancement (forms, bugs, accessibility)","Transfer of the current product to microservice interaction","Migration of product functionality from Seibel CRM to microfrontend architecture","Mentoring for a junior developer\n"],technologies:["TypeScript","React","Redux","JavaScript","styled-components","React Query","Figma","TeamCity","BitBucket","Git"]},{company:"EPAM Systems Inc.",companyLink:"https://www.epam.com/",position:"Frontend developer",dateStart:"june 2021",dateEnd:"april 2022",responsibilities:["Developing a new product “Autosubscription” for long-term rentals from scratch to production","Working with A11y (accessibility)","Cross-browser layout"],technologies:["React","TypeScript","Redux","JavaScript","CSS-in-JS","Figma Design","TeamCity","Git"]},{company:"LLC Gazprom Neft – Digital Solutions",companyLink:"https://www.gazprom-neft.ru/",position:"Frontend developer",dateStart:"january 2021",dateEnd:"june 2021",responsibilities:["Development of an interface for a distributed system for monitoring and forecasting the development of new fields, oil production + reporting on existing ones.","Support and refinement of dashboard system (information service with various graphs and reports)"],technologies:["TypeScript","ReactJS","Git","JavaScript","GraphQL","CSS","Webpack","Apollo","Docker","G2 Plot","Ant Design Charts"]},{company:"Kontur",companyLink:"https://kontur-inc.com/",position:"Software Engineer (web)",dateStart:"september 2019",dateEnd:"december 2020",responsibilities:["Development of interfaces for systems to generate and send electronic reporting with personal data with electronic signature","Developed a form with validations and cross-checks in React + TS + Redux for filling reporting to the Federal Tax Service","Transferred the project to React with Razor (CSharp) + JQuery + knockout.js","Optimized the process of building an application from multiple repositories (build time was reduced from 30 minutes to 5 minutes)"],technologies:["Typescript","ReactJS","Redux","Git","JavaScript","JQuery","Stylus","CSS","Webpack","pnpm","PowerShell","Razor (C#)"]}];var m=()=>a.createElement(a.Fragment,null,Object.keys(c).map((e=>a.createElement(a.Fragment,{key:e},a.createElement("div",{className:"skillTitle"},e),a.createElement("div",{className:"skillNames"},c[e].map((e=>a.createElement("div",{key:e.name,className:"skillName "+(e.highlight?"highlight":"")},e.name)))))))),p=()=>a.createElement("div",{className:"experiencesWrapper"},s.map((e=>a.createElement("div",{key:e.company,className:"experienceWrapper"},a.createElement("div",{className:"experienceDate"},a.createElement("div",null,e.dateEnd),a.createElement("div",{className:"dash"},"⮌"),a.createElement("div",null,e.dateStart)),a.createElement("div",{className:"experienceInfo"},a.createElement("div",{className:"companyInfo"},a.createElement("div",{className:"company"},e.company),a.createElement("a",{href:e.companyLink,target:"_blank",className:"link",title:`go to ${e.company} site`,rel:"noreferrer"},a.createElement("svg",{className:"linkicon",xmlns:"http://www.w3.org/2000/svg",fill:"currentColor",viewBox:"0 0 16 16",width:16,height:16},a.createElement("path",{d:"M4.715 6.542 3.343 7.914a3 3 0 1 0 4.243 4.243l1.828-1.829A3 3 0 0 0 8.586 5.5L8 6.086a1.002 1.002 0 0 0-.154.199 2 2 0 0 1 .861 3.337L6.88 11.45a2 2 0 1 1-2.83-2.83l.793-.792a4.018 4.018 0 0 1-.128-1.287z"}),a.createElement("path",{d:"M6.586 4.672A3 3 0 0 0 7.414 9.5l.775-.776a2 2 0 0 1-.896-3.346L9.12 3.55a2 2 0 1 1 2.83 2.83l-.793.792c.112.42.155.855.128 1.287l1.372-1.372a3 3 0 1 0-4.243-4.243L6.586 4.672z"})),e.companyLink),a.createElement("div",{className:"position"},e.position)),a.createElement("ul",null,e.responsibilities.map((e=>a.createElement("li",{key:e},e)))),a.createElement("div",null,e.technologies.map((e=>a.createElement("span",{key:e,className:"technology"},e)))))))));const h=a.memo((({nav:e})=>{switch(e){case"main":default:return a.createElement(o,null);case"skills":return a.createElement(m,null);case"experience":return a.createElement(p,null)}}));h.displayName="CurrentInfo";const u={tension:1200,friction:40},d={mass:10,tension:190,friction:50},g=(e,t)=>`translate3d(${e}px,${t}px,0) translate3d(-50%,-50%,0)`;var v=({nav:e})=>{const[t,n]=(0,r.useTrail)(3,(e=>({xy:[0,0],config:0===e?u:d}))),[i,{left:o,top:c}]=(0,l.Z)(),s=e=>{n.start({xy:[e.clientX-o,e.clientY-c]})};return a.createElement("main",{className:"main "+("experience"===e?"hide":"")},a.createElement("svg",{style:{position:"absolute",width:0,height:0}},a.createElement("filter",{id:"allowemptyinput"},a.createElement("feGaussianBlur",{in:"SourceGraphic",result:"blur",stdDeviation:"35"}),a.createElement("feColorMatrix",{in:"blur",values:"1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 30 -7"}))),a.createElement("div",{ref:i,className:"hooks-main",onMouseMove:s},t.map((({xy:e},t)=>a.createElement(r.animated.div,{key:t,style:{transform:e.to(g)}})))),a.createElement("div",{className:"greet",onMouseMove:s},a.createElement(h,{nav:e})))},f=({nav:e,changeNav:t})=>{const n=e=>{e.stopPropagation(),e.preventDefault();const n=e.target;t(n.id)};return a.createElement("header",null,a.createElement("nav",{className:"nav"},a.createElement("div",{className:"links"},a.createElement("button",{className:"monogram logolink "+("main"===e?"logolink-active":""),id:"main",onClick:n,title:"Main page"},"EA"),a.createElement("button",{className:"link "+("skills"===e?"link-active":""),id:"skills",onClick:n,title:"Skills"},"Skills"),a.createElement("button",{className:"link "+("experience"===e?"link-active":""),id:"experience",onClick:n,title:"Experience"},"Experience")),a.createElement("div",{className:"links"},a.createElement("a",{className:"social",href:"https://t.me/allowemptyinput",title:"telegram",target:"_blank",rel:"noreferrer"},a.createElement("svg",{width:16,height:16,className:"socialicon",xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 16 16"},a.createElement("path",{d:"M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0zM8.287 5.906c-.778.324-2.334.994-4.666 2.01-.378.15-.577.298-.595.442-.03.243.275.339.69.47l.175.055c.408.133.958.288 1.243.294.26.006.549-.1.868-.32 2.179-1.471 3.304-2.214 3.374-2.23.05-.012.12-.026.166.016.047.041.042.12.037.141-.03.129-1.227 1.241-1.846 1.817-.193.18-.33.307-.358.336a8.154 8.154 0 0 1-.188.186c-.38.366-.664.64.015 1.088.327.216.589.393.85.571.284.194.568.387.936.629.093.06.183.125.27.187.331.236.63.448.997.414.214-.02.435-.22.547-.82.265-1.417.786-4.486.906-5.751a1.426 1.426 0 0 0-.013-.315.337.337 0 0 0-.114-.217.526.526 0 0 0-.31-.093c-.3.005-.763.166-2.984 1.09z"}))),a.createElement("a",{className:"social",href:"https://github.com/ashmee",title:"github",target:"_blank",rel:"noreferrer"},a.createElement("svg",{width:16,height:16,className:"socialicon",xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 16 16"},a.createElement("path",{d:"M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27.68 0 1.36.09 2 .27 1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0 .21.15.46.55.38A8.012 8.012 0 0 0 16 8c0-4.42-3.58-8-8-8z"}))),a.createElement("a",{className:"social",href:"https://www.linkedin.com/in/evg-ash/",title:"linkedin",target:"_blank",rel:"noreferrer"},a.createElement("svg",{width:16,height:16,className:"socialicon",xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 16 16"},a.createElement("path",{d:"M0 1.146C0 .513.526 0 1.175 0h13.65C15.474 0 16 .513 16 1.146v13.708c0 .633-.526 1.146-1.175 1.146H1.175C.526 16 0 15.487 0 14.854V1.146zm4.943 12.248V6.169H2.542v7.225h2.401zm-1.2-8.212c.837 0 1.358-.554 1.358-1.248-.015-.709-.52-1.248-1.342-1.248-.822 0-1.359.54-1.359 1.248 0 .694.521 1.248 1.327 1.248h.016zm4.908 8.212V9.359c0-.216.016-.432.08-.586.173-.431.568-.878 1.232-.878.869 0 1.216.662 1.216 1.634v3.865h2.401V9.25c0-2.22-1.184-3.252-2.764-3.252-1.274 0-1.845.7-2.165 1.193v.025h-.016a5.54 5.54 0 0 1 .016-.025V6.169h-2.4c.03.678 0 7.225 0 7.225h2.4z"}))),a.createElement("a",{className:"social",href:"tel:+79826540671",title:"mobile phone"},a.createElement("svg",{width:16,height:16,className:"socialicon",xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 16 16"},a.createElement("path",{fillRule:"evenodd",d:"M1.885.511a1.745 1.745 0 0 1 2.61.163L6.29 2.98c.329.423.445.974.315 1.494l-.547 2.19a.678.678 0 0 0 .178.643l2.457 2.457a.678.678 0 0 0 .644.178l2.189-.547a1.745 1.745 0 0 1 1.494.315l2.306 1.794c.829.645.905 1.87.163 2.611l-1.034 1.034c-.74.74-1.846 1.065-2.877.702a18.634 18.634 0 0 1-7.01-4.42 18.634 18.634 0 0 1-4.42-7.009c-.362-1.03-.037-2.137.703-2.877L1.885.511z"}))),a.createElement("a",{className:"social",href:"mailto:ashmee90@gmail.com",title:"email"},a.createElement("svg",{className:"socialicon",xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 16 16",width:16,height:16},a.createElement("path",{d:"M.05 3.555A2 2 0 0 1 2 2h12a2 2 0 0 1 1.95 1.555L8 8.414.05 3.555ZM0 4.697v7.104l5.803-3.558L0 4.697ZM6.761 8.83l-6.57 4.027A2 2 0 0 0 2 14h12a2 2 0 0 0 1.808-1.144l-6.57-4.027L8 9.586l-1.239-.757Zm3.436-.586L16 11.801V4.697l-5.803 3.546Z"}))))))};i.render(a.createElement(a.StrictMode,null,a.createElement((function(){const[e,t]=(0,a.useState)("main");return a.createElement("div",{className:"app"},a.createElement(f,{nav:e,changeNav:t}),a.createElement(v,{nav:e}))}),null)),document.getElementById("root"))}},n={};function a(e){var i=n[e];if(void 0!==i)return i.exports;var r=n[e]={exports:{}};return t[e](r,r.exports,a),r.exports}a.m=t,e=[],a.O=function(t,n,i,r){if(!n){var l=1/0;for(m=0;m<e.length;m++){n=e[m][0],i=e[m][1],r=e[m][2];for(var o=!0,c=0;c<n.length;c++)(!1&r||l>=r)&&Object.keys(a.O).every((function(e){return a.O[e](n[c])}))?n.splice(c--,1):(o=!1,r<l&&(l=r));if(o){e.splice(m--,1);var s=i();void 0!==s&&(t=s)}}return t}r=r||0;for(var m=e.length;m>0&&e[m-1][2]>r;m--)e[m]=e[m-1];e[m]=[n,i,r]},a.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return a.d(t,{a:t}),t},a.d=function(e,t){for(var n in t)a.o(t,n)&&!a.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:t[n]})},a.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},function(){var e={179:0};a.O.j=function(t){return 0===e[t]};var t=function(t,n){var i,r,l=n[0],o=n[1],c=n[2],s=0;if(l.some((function(t){return 0!==e[t]}))){for(i in o)a.o(o,i)&&(a.m[i]=o[i]);if(c)var m=c(a)}for(t&&t(n);s<l.length;s++)r=l[s],a.o(e,r)&&e[r]&&e[r][0](),e[r]=0;return a.O(m)},n=self.webpackChunkashmee_github_io=self.webpackChunkashmee_github_io||[];n.forEach(t.bind(null,0)),n.push=t.bind(null,n.push.bind(n))}();var i=a.O(void 0,[736],(function(){return a(836)}));i=a.O(i)}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
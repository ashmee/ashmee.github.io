!function(){"use strict";var e,t={836:function(e,t,a){var n=a(294),l=a(935),i=a(472),r=a(460);function c(){return n.createElement(n.Fragment,null,n.createElement("h1",{className:"title"},"Evgenii Ashikhmin"),n.createElement("p",{className:"desc"},"Frontend developer — JavaScript, TypeScript, React"),n.createElement("ul",null,n.createElement("li",null,"Занимаюсь разработкой пользовательских интерфейсов и приложений."),n.createElement("li",null,"Frontend разработчик с 3 годами опыта в веб-разработке, с акцентом на React"),n.createElement("li",null," В IT сфере работаю более 7 лет"),n.createElement("li",null,"Есть опыт работы с кроссбраузерностью, W3C валидной и семантичной разметкой"),n.createElement("li",null," Опыт работы с методологией SCRUM agile"),n.createElement("li",null,"Базовый опыт в устранении неполадок, оптимизации производительности и устранении ошибок"),n.createElement("li",null,"Опыт работы с отзывчивым, адаптивным дизайном"),n.createElement("li",null,"В настоящее время изучаю Node.js")))}const s={Frontend:[{name:"JavaScript (ES6+)",highlight:!0},{name:"TypeScript",highlight:!0},{name:"ReactJS",highlight:!0},{name:"CSS"},{name:"Redux"},{name:"styled-components"},{name:"GraphQL"},{name:"Apollo"},{name:"MobX"},{name:"Stylus"},{name:"SCSS"},{name:"Webpack",highlight:!0},{name:"Parcel"},{name:"Gulp"}],"Backend and Database":[{name:"Node.js",highlight:!0},{name:"Express.js"},{name:"Sequelize"},{name:"MySQL"},{name:"PostgreSQL"}],"Dev tools":[{name:"WebStorm",highlight:!0},{name:"Visual Studio Code"},{name:"Git"},{name:"PowerShell"},{name:"Postman"}]},o=[{company:"innotech",companyLink:"https://inno.tech/",position:"Frontend developer",dateStart:"april 2022",dateEnd:"current time",responsibilities:["Поддержка и доработка продукта (формы, баги, доступность)","Перевод текущего продукта на микросервисное взаимодействие","Перевод функционала продукта с CRM Seibel на архитектуру микрофронтендов","Менторинг джуниор-разработчика"],technologies:["TypeScript","React","Redux","JavaScript","styled-components","React Query","Figma","TeamCity","BitBucket","Git"]},{company:"EPAM Systems Inc.",companyLink:"https://www.epam.com/",position:"Frontend developer",dateStart:"june 2021",dateEnd:"april 2022",responsibilities:["Разработка нового продукта «Подписки на авто» для долгосрочной аренды с нуля до продакшена","Работа с A11y (accessebility)","Кроссбраузерная верстка"],technologies:["React","TypeScript","Redux","JavaScript","CSS-in-JS","Figma Design","TeamCity","Git"]},{company:"LLC Gazprom Neft – Digital Solutions",companyLink:"https://www.gazprom-neft.ru/",position:"Frontend developer",dateStart:"january 2021",dateEnd:"june 2021",responsibilities:["Разработка интерфейса распределенной системы контроля и прогнозирования разработки новых месторождений, нефтедобычи + формирования отчетности по имеющимся.","Поддержка и доработка системы дашбордов (инфосервис с различными графиками и составлением отчетов)"],technologies:["TypeScript","ReactJS","Git","JavaScript","GraphQL","CSS","Webpack","Apollo","Docker","G2 Plot","Ant Design Charts"]},{company:"Kontur",companyLink:"https://kontur-inc.com/",position:"Software Engineer (web)",dateStart:"september 2019",dateEnd:"december 2020",responsibilities:["Разработка интерфейсов систем формирования и отправки электронной отчетности с персональными данными с подписанием электронной подписью","Разработал форму с валидациями и кросс-проверками на React + TS + Redux для заполнения отчетности в ФНС","Перевод проекта на React с Razor (CSharp) + JQuery + knockout.js","Оптимизировал процесс сборки приложения из нескольких репозиториев (время сборки уменьшилось с 30 минут до 5 минут"],technologies:["Typescript"," ReactJS"," Redux"," Git"," JavaScript"," JQuery"," Stylus"," CSS"," Webpack"," pnpm"," PowerShell"," Razor (CSharp)"]}];var m=()=>n.createElement(n.Fragment,null,Object.keys(s).map((e=>n.createElement(n.Fragment,{key:e},n.createElement("div",{className:"skillTitle"},e),n.createElement("div",{className:"skillNames"},s[e].map((e=>n.createElement("div",{key:e.name,className:"skillName "+(e.highlight?"highlight":"")},e.name)))))))),p=()=>n.createElement("div",{className:"experiencesWrapper"},o.map((e=>n.createElement("div",{key:e.company,className:"experienceWrapper"},n.createElement("div",{className:"experienceDate"},n.createElement("div",null,e.dateEnd),n.createElement("div",{className:"dash"},"⮌"),n.createElement("div",null,e.dateStart)),n.createElement("div",{className:"experienceInfo"},n.createElement("div",{className:"companyInfo"},n.createElement("div",{className:"company"},e.company),n.createElement("a",{href:e.companyLink,target:"_blank",className:"link",title:`go to ${e.company} site`,rel:"noreferrer"},n.createElement("svg",{className:"linkicon",xmlns:"http://www.w3.org/2000/svg",fill:"currentColor",viewBox:"0 0 16 16",width:16,height:16},n.createElement("path",{d:"M4.715 6.542 3.343 7.914a3 3 0 1 0 4.243 4.243l1.828-1.829A3 3 0 0 0 8.586 5.5L8 6.086a1.002 1.002 0 0 0-.154.199 2 2 0 0 1 .861 3.337L6.88 11.45a2 2 0 1 1-2.83-2.83l.793-.792a4.018 4.018 0 0 1-.128-1.287z"}),n.createElement("path",{d:"M6.586 4.672A3 3 0 0 0 7.414 9.5l.775-.776a2 2 0 0 1-.896-3.346L9.12 3.55a2 2 0 1 1 2.83 2.83l-.793.792c.112.42.155.855.128 1.287l1.372-1.372a3 3 0 1 0-4.243-4.243L6.586 4.672z"})),e.companyLink),n.createElement("div",{className:"position"},e.position)),n.createElement("ul",null,e.responsibilities.map((e=>n.createElement("li",{key:e},e)))),n.createElement("div",null,e.technologies.map((e=>n.createElement("span",{key:e,className:"technology"},e)))))))));const h=n.memo((({nav:e})=>{switch(e){case"main":default:return n.createElement(c,null);case"skills":return n.createElement(m,null);case"experience":return n.createElement(p,null)}}));h.displayName="CurrentInfo";const u={tension:1200,friction:40},d={mass:10,tension:190,friction:50},v=(e,t)=>`translate3d(${e}px,${t}px,0) translate3d(-50%,-50%,0)`;var g=({nav:e})=>{const[t,a]=(0,i.useTrail)(3,(e=>({xy:[0,0],config:0===e?u:d}))),[l,{left:c,top:s}]=(0,r.Z)(),o=e=>{a.start({xy:[e.clientX-c,e.clientY-s]})};return n.createElement("main",{className:"main"},n.createElement("svg",{style:{position:"absolute",width:0,height:0}},n.createElement("filter",{id:"allowemptyinput"},n.createElement("feGaussianBlur",{in:"SourceGraphic",result:"blur",stdDeviation:"35"}),n.createElement("feColorMatrix",{in:"blur",values:"1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 30 -7"}))),n.createElement("div",{ref:l,className:"hooks-main",onMouseMove:o},t.map((({xy:e},t)=>n.createElement(i.animated.div,{key:t,style:{transform:e.to(v)}})))),n.createElement("div",{className:"greet",onMouseMove:o},n.createElement(h,{nav:e})))},E=({nav:e,changeNav:t})=>{const a=e=>{e.stopPropagation(),e.preventDefault();const a=e.target;t(a.id)};return n.createElement("header",null,n.createElement("nav",{className:"nav"},n.createElement("div",{className:"links"},n.createElement("button",{className:"monogram logolink "+("main"===e?"logolink-active":""),id:"main",onClick:a},"EA"),n.createElement("button",{className:"link "+("skills"===e?"link-active":""),id:"skills",onClick:a},"Skills"),n.createElement("button",{className:"link "+("experience"===e?"link-active":""),id:"experience",onClick:a},"Experience")),n.createElement("div",{className:"links"},n.createElement("a",{className:"social",href:"https://t.me/allowemptyinput",title:"telegram",target:"_blank",rel:"noreferrer"},n.createElement("svg",{width:16,height:16,className:"socialicon",xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 16 16"},n.createElement("path",{d:"M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0zM8.287 5.906c-.778.324-2.334.994-4.666 2.01-.378.15-.577.298-.595.442-.03.243.275.339.69.47l.175.055c.408.133.958.288 1.243.294.26.006.549-.1.868-.32 2.179-1.471 3.304-2.214 3.374-2.23.05-.012.12-.026.166.016.047.041.042.12.037.141-.03.129-1.227 1.241-1.846 1.817-.193.18-.33.307-.358.336a8.154 8.154 0 0 1-.188.186c-.38.366-.664.64.015 1.088.327.216.589.393.85.571.284.194.568.387.936.629.093.06.183.125.27.187.331.236.63.448.997.414.214-.02.435-.22.547-.82.265-1.417.786-4.486.906-5.751a1.426 1.426 0 0 0-.013-.315.337.337 0 0 0-.114-.217.526.526 0 0 0-.31-.093c-.3.005-.763.166-2.984 1.09z"}))),n.createElement("a",{className:"social",href:"https://github.com/ashmee",title:"github",target:"_blank",rel:"noreferrer"},n.createElement("svg",{width:16,height:16,className:"socialicon",xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 16 16"},n.createElement("path",{d:"M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27.68 0 1.36.09 2 .27 1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0 .21.15.46.55.38A8.012 8.012 0 0 0 16 8c0-4.42-3.58-8-8-8z"}))),n.createElement("a",{className:"social",href:"https://www.linkedin.com/in/evg-ash/",title:"linkedin",target:"_blank",rel:"noreferrer"},n.createElement("svg",{width:16,height:16,className:"socialicon",xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 16 16"},n.createElement("path",{d:"M0 1.146C0 .513.526 0 1.175 0h13.65C15.474 0 16 .513 16 1.146v13.708c0 .633-.526 1.146-1.175 1.146H1.175C.526 16 0 15.487 0 14.854V1.146zm4.943 12.248V6.169H2.542v7.225h2.401zm-1.2-8.212c.837 0 1.358-.554 1.358-1.248-.015-.709-.52-1.248-1.342-1.248-.822 0-1.359.54-1.359 1.248 0 .694.521 1.248 1.327 1.248h.016zm4.908 8.212V9.359c0-.216.016-.432.08-.586.173-.431.568-.878 1.232-.878.869 0 1.216.662 1.216 1.634v3.865h2.401V9.25c0-2.22-1.184-3.252-2.764-3.252-1.274 0-1.845.7-2.165 1.193v.025h-.016a5.54 5.54 0 0 1 .016-.025V6.169h-2.4c.03.678 0 7.225 0 7.225h2.4z"}))),n.createElement("a",{className:"social",href:"tel:+79826540671",title:"mobile phone"},n.createElement("svg",{width:16,height:16,className:"socialicon",xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 16 16"},n.createElement("path",{fillRule:"evenodd",d:"M1.885.511a1.745 1.745 0 0 1 2.61.163L6.29 2.98c.329.423.445.974.315 1.494l-.547 2.19a.678.678 0 0 0 .178.643l2.457 2.457a.678.678 0 0 0 .644.178l2.189-.547a1.745 1.745 0 0 1 1.494.315l2.306 1.794c.829.645.905 1.87.163 2.611l-1.034 1.034c-.74.74-1.846 1.065-2.877.702a18.634 18.634 0 0 1-7.01-4.42 18.634 18.634 0 0 1-4.42-7.009c-.362-1.03-.037-2.137.703-2.877L1.885.511z"}))),n.createElement("a",{className:"social",href:"mailto:ashmee90@gmail.com",title:"email"},n.createElement("svg",{className:"socialicon",xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 16 16",width:16,height:16},n.createElement("path",{d:"M.05 3.555A2 2 0 0 1 2 2h12a2 2 0 0 1 1.95 1.555L8 8.414.05 3.555ZM0 4.697v7.104l5.803-3.558L0 4.697ZM6.761 8.83l-6.57 4.027A2 2 0 0 0 2 14h12a2 2 0 0 0 1.808-1.144l-6.57-4.027L8 9.586l-1.239-.757Zm3.436-.586L16 11.801V4.697l-5.803 3.546Z"}))))))};l.render(n.createElement(n.StrictMode,null,n.createElement((function(){const[e,t]=(0,n.useState)("main");return n.createElement("div",{className:"app"},n.createElement(E,{nav:e,changeNav:t}),n.createElement(g,{nav:e}))}),null)),document.getElementById("root"))}},a={};function n(e){var l=a[e];if(void 0!==l)return l.exports;var i=a[e]={exports:{}};return t[e](i,i.exports,n),i.exports}n.m=t,e=[],n.O=function(t,a,l,i){if(!a){var r=1/0;for(m=0;m<e.length;m++){a=e[m][0],l=e[m][1],i=e[m][2];for(var c=!0,s=0;s<a.length;s++)(!1&i||r>=i)&&Object.keys(n.O).every((function(e){return n.O[e](a[s])}))?a.splice(s--,1):(c=!1,i<r&&(r=i));if(c){e.splice(m--,1);var o=l();void 0!==o&&(t=o)}}return t}i=i||0;for(var m=e.length;m>0&&e[m-1][2]>i;m--)e[m]=e[m-1];e[m]=[a,l,i]},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,{a:t}),t},n.d=function(e,t){for(var a in t)n.o(t,a)&&!n.o(e,a)&&Object.defineProperty(e,a,{enumerable:!0,get:t[a]})},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},function(){var e={179:0};n.O.j=function(t){return 0===e[t]};var t=function(t,a){var l,i,r=a[0],c=a[1],s=a[2],o=0;if(r.some((function(t){return 0!==e[t]}))){for(l in c)n.o(c,l)&&(n.m[l]=c[l]);if(s)var m=s(n)}for(t&&t(a);o<r.length;o++)i=r[o],n.o(e,i)&&e[i]&&e[i][0](),e[i]=0;return n.O(m)},a=self.webpackChunkashmee_github_io=self.webpackChunkashmee_github_io||[];a.forEach(t.bind(null,0)),a.push=t.bind(null,a.push.bind(a))}();var l=n.O(void 0,[736],(function(){return n(836)}));l=n.O(l)}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QVFoRCxJQUN6QnFFLEVBQVUxQixFQUFTM0MsR0FDaEJrQyxFQUFvQnlCLEVBQUVTLEVBQWlCQyxJQUFZRCxFQUFnQkMsSUFDckVELEVBQWdCQyxHQUFTLEtBRTFCRCxFQUFnQkMsR0FBVyxFQUU1QixPQUFPbkMsRUFBb0JRLEVBQUU1QixFQUM5QixFQUVJOEQsRUFBcUJDLEtBQW1DLDZCQUFJQSxLQUFtQyw4QkFBSyxHQUN4R0QsRUFBbUJFLFFBQVFSLEVBQXFCUyxLQUFLLEtBQU0sSUFDM0RILEVBQW1CSSxLQUFPVixFQUFxQlMsS0FBSyxLQUFNSCxFQUFtQkksS0FBS0QsS0FBS0gsRyxJQy9DdkYsSUFBSUssRUFBc0IvQyxFQUFvQlEsT0FBRUwsRUFBVyxDQUFDLE1BQU0sV0FBYSxPQUFPSCxFQUFvQixJQUFNLElBQ2hIK0MsRUFBc0IvQyxFQUFvQlEsRUFBRXVDLEUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9hc2htZWUuZ2l0aHViLmlvL3dlYnBhY2svcnVudGltZS9jaHVuayBsb2FkZWQiLCJ3ZWJwYWNrOi8vYXNobWVlLmdpdGh1Yi5pby8uL3NyYy9jb21wb25lbnRzL21haW4vTWFpbkluZm8udHN4Iiwid2VicGFjazovL2FzaG1lZS5naXRodWIuaW8vLi9zcmMvZGF0YS9pbmRleC50cyIsIndlYnBhY2s6Ly9hc2htZWUuZ2l0aHViLmlvLy4vc3JjL2NvbXBvbmVudHMvbWFpbi9za2lsbHMvU2tpbGxzLnRzeCIsIndlYnBhY2s6Ly9hc2htZWUuZ2l0aHViLmlvLy4vc3JjL2NvbXBvbmVudHMvbWFpbi9leHBlcmllbmNlL0V4cGVyaWVuY2UudHN4Iiwid2VicGFjazovL2FzaG1lZS5naXRodWIuaW8vLi9zcmMvY29tcG9uZW50cy9tYWluL0N1cnJlbnRJbmZvLnRzeCIsIndlYnBhY2s6Ly9hc2htZWUuZ2l0aHViLmlvLy4vc3JjL2NvbXBvbmVudHMvbWFpbi9NYWluLnRzeCIsIndlYnBhY2s6Ly9hc2htZWUuZ2l0aHViLmlvLy4vc3JjL2NvbXBvbmVudHMvaGVhZGVyL0hlYWRlci50c3giLCJ3ZWJwYWNrOi8vYXNobWVlLmdpdGh1Yi5pby8uL3NyYy9pbmRleC50c3giLCJ3ZWJwYWNrOi8vYXNobWVlLmdpdGh1Yi5pby8uL3NyYy9BcHAudHN4Iiwid2VicGFjazovL2FzaG1lZS5naXRodWIuaW8vd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vYXNobWVlLmdpdGh1Yi5pby93ZWJwYWNrL3J1bnRpbWUvY29tcGF0IGdldCBkZWZhdWx0IGV4cG9ydCIsIndlYnBhY2s6Ly9hc2htZWUuZ2l0aHViLmlvL3dlYnBhY2svcnVudGltZS9kZWZpbmUgcHJvcGVydHkgZ2V0dGVycyIsIndlYnBhY2s6Ly9hc2htZWUuZ2l0aHViLmlvL3dlYnBhY2svcnVudGltZS9oYXNPd25Qcm9wZXJ0eSBzaG9ydGhhbmQiLCJ3ZWJwYWNrOi8vYXNobWVlLmdpdGh1Yi5pby93ZWJwYWNrL3J1bnRpbWUvanNvbnAgY2h1bmsgbG9hZGluZyIsIndlYnBhY2s6Ly9hc2htZWUuZ2l0aHViLmlvL3dlYnBhY2svc3RhcnR1cCJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgZGVmZXJyZWQgPSBbXTtcbl9fd2VicGFja19yZXF1aXJlX18uTyA9IGZ1bmN0aW9uKHJlc3VsdCwgY2h1bmtJZHMsIGZuLCBwcmlvcml0eSkge1xuXHRpZihjaHVua0lkcykge1xuXHRcdHByaW9yaXR5ID0gcHJpb3JpdHkgfHwgMDtcblx0XHRmb3IodmFyIGkgPSBkZWZlcnJlZC5sZW5ndGg7IGkgPiAwICYmIGRlZmVycmVkW2kgLSAxXVsyXSA+IHByaW9yaXR5OyBpLS0pIGRlZmVycmVkW2ldID0gZGVmZXJyZWRbaSAtIDFdO1xuXHRcdGRlZmVycmVkW2ldID0gW2NodW5rSWRzLCBmbiwgcHJpb3JpdHldO1xuXHRcdHJldHVybjtcblx0fVxuXHR2YXIgbm90RnVsZmlsbGVkID0gSW5maW5pdHk7XG5cdGZvciAodmFyIGkgPSAwOyBpIDwgZGVmZXJyZWQubGVuZ3RoOyBpKyspIHtcblx0XHR2YXIgY2h1bmtJZHMgPSBkZWZlcnJlZFtpXVswXTtcblx0XHR2YXIgZm4gPSBkZWZlcnJlZFtpXVsxXTtcblx0XHR2YXIgcHJpb3JpdHkgPSBkZWZlcnJlZFtpXVsyXTtcblx0XHR2YXIgZnVsZmlsbGVkID0gdHJ1ZTtcblx0XHRmb3IgKHZhciBqID0gMDsgaiA8IGNodW5rSWRzLmxlbmd0aDsgaisrKSB7XG5cdFx0XHRpZiAoKHByaW9yaXR5ICYgMSA9PT0gMCB8fCBub3RGdWxmaWxsZWQgPj0gcHJpb3JpdHkpICYmIE9iamVjdC5rZXlzKF9fd2VicGFja19yZXF1aXJlX18uTykuZXZlcnkoZnVuY3Rpb24oa2V5KSB7IHJldHVybiBfX3dlYnBhY2tfcmVxdWlyZV9fLk9ba2V5XShjaHVua0lkc1tqXSk7IH0pKSB7XG5cdFx0XHRcdGNodW5rSWRzLnNwbGljZShqLS0sIDEpO1xuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0ZnVsZmlsbGVkID0gZmFsc2U7XG5cdFx0XHRcdGlmKHByaW9yaXR5IDwgbm90RnVsZmlsbGVkKSBub3RGdWxmaWxsZWQgPSBwcmlvcml0eTtcblx0XHRcdH1cblx0XHR9XG5cdFx0aWYoZnVsZmlsbGVkKSB7XG5cdFx0XHRkZWZlcnJlZC5zcGxpY2UoaS0tLCAxKVxuXHRcdFx0dmFyIHIgPSBmbigpO1xuXHRcdFx0aWYgKHIgIT09IHVuZGVmaW5lZCkgcmVzdWx0ID0gcjtcblx0XHR9XG5cdH1cblx0cmV0dXJuIHJlc3VsdDtcbn07IiwiaW1wb3J0IFJlYWN0IGZyb20gXCJyZWFjdFwiXG5pbXBvcnQgXCIuL01haW4uc2Nzc1wiXG5cbmV4cG9ydCBmdW5jdGlvbiBNYWluSW5mbygpIHtcbiAgICByZXR1cm4gKFxuICAgICAgICA8PlxuICAgICAgICAgICAgPGgxIGNsYXNzTmFtZT1cInRpdGxlXCI+RXZnZW5paSBBc2hpa2htaW48L2gxPlxuICAgICAgICAgICAgPHAgY2xhc3NOYW1lPVwiZGVzY1wiPkZyb250ZW5kIGRldmVsb3BlciDigJQgSmF2YVNjcmlwdCwgVHlwZVNjcmlwdCwgUmVhY3Q8L3A+XG4gICAgICAgICAgICA8dWw+XG4gICAgICAgICAgICAgICAgPGxpPtCX0LDQvdC40LzQsNGO0YHRjCDRgNCw0LfRgNCw0LHQvtGC0LrQvtC5INC/0L7Qu9GM0LfQvtCy0LDRgtC10LvRjNGB0LrQuNGFINC40L3RgtC10YDRhNC10LnRgdC+0LIg0Lgg0L/RgNC40LvQvtC20LXQvdC40LkuPC9saT5cbiAgICAgICAgICAgICAgICA8bGk+RnJvbnRlbmQg0YDQsNC30YDQsNCx0L7RgtGH0LjQuiDRgSAzINCz0L7QtNCw0LzQuCDQvtC/0YvRgtCwINCyINCy0LXQsS3RgNCw0LfRgNCw0LHQvtGC0LrQtSwg0YEg0LDQutGG0LXQvdGC0L7QvCDQvdCwIFJlYWN0PC9saT5cbiAgICAgICAgICAgICAgICA8bGk+INCSIElUINGB0YTQtdGA0LUg0YDQsNCx0L7RgtCw0Y4g0LHQvtC70LXQtSA3INC70LXRgjwvbGk+XG4gICAgICAgICAgICAgICAgPGxpPtCV0YHRgtGMINC+0L/Ri9GCINGA0LDQsdC+0YLRiyDRgSDQutGA0L7RgdGB0LHRgNCw0YPQt9C10YDQvdC+0YHRgtGM0Y4sIFczQyDQstCw0LvQuNC00L3QvtC5INC4INGB0LXQvNCw0L3RgtC40YfQvdC+0Lkg0YDQsNC30LzQtdGC0LrQvtC5PC9saT5cbiAgICAgICAgICAgICAgICA8bGk+INCe0L/Ri9GCINGA0LDQsdC+0YLRiyDRgSDQvNC10YLQvtC00L7Qu9C+0LPQuNC10LkgU0NSVU0gYWdpbGU8L2xpPlxuICAgICAgICAgICAgICAgIDxsaT5cbiAgICAgICAgICAgICAgICAgICAg0JHQsNC30L7QstGL0Lkg0L7Qv9GL0YIg0LIg0YPRgdGC0YDQsNC90LXQvdC40Lgg0L3QtdC/0L7Qu9Cw0LTQvtC6LCDQvtC/0YLQuNC80LjQt9Cw0YbQuNC4INC/0YDQvtC40LfQstC+0LTQuNGC0LXQu9GM0L3QvtGB0YLQuCDQuCDRg9GB0YLRgNCw0L3QtdC90LjQuFxuICAgICAgICAgICAgICAgICAgICDQvtGI0LjQsdC+0LpcbiAgICAgICAgICAgICAgICA8L2xpPlxuICAgICAgICAgICAgICAgIDxsaT7QntC/0YvRgiDRgNCw0LHQvtGC0Ysg0YEg0L7RgtC30YvQstGH0LjQstGL0LwsINCw0LTQsNC/0YLQuNCy0L3Ri9C8INC00LjQt9Cw0LnQvdC+0Lw8L2xpPlxuICAgICAgICAgICAgICAgIDxsaT7QkiDQvdCw0YHRgtC+0Y/RidC10LUg0LLRgNC10LzRjyDQuNC30YPRh9Cw0Y4gTm9kZS5qczwvbGk+XG4gICAgICAgICAgICA8L3VsPlxuICAgICAgICA8Lz5cbiAgICApXG59XG4iLCJpbXBvcnQgeyBFeHBlcmllbmNlRGF0YVQsIFNraWxsc0RhdGFUIH0gZnJvbSBcIi4uL3R5cGVzXCJcblxuZXhwb3J0IGNvbnN0IFNraWxsc0RhdGE6IFNraWxsc0RhdGFUID0ge1xuICAgIEZyb250ZW5kOiBbXG4gICAgICAgIHsgbmFtZTogXCJKYXZhU2NyaXB0IChFUzYrKVwiLCBoaWdobGlnaHQ6IHRydWUgfSxcbiAgICAgICAgeyBuYW1lOiBcIlR5cGVTY3JpcHRcIiwgaGlnaGxpZ2h0OiB0cnVlIH0sXG4gICAgICAgIHsgbmFtZTogXCJSZWFjdEpTXCIsIGhpZ2hsaWdodDogdHJ1ZSB9LFxuICAgICAgICB7IG5hbWU6IFwiQ1NTXCIgfSxcbiAgICAgICAgeyBuYW1lOiBcIlJlZHV4XCIgfSxcbiAgICAgICAgeyBuYW1lOiBcInN0eWxlZC1jb21wb25lbnRzXCIgfSxcbiAgICAgICAgeyBuYW1lOiBcIkdyYXBoUUxcIiB9LFxuICAgICAgICB7IG5hbWU6IFwiQXBvbGxvXCIgfSxcbiAgICAgICAgeyBuYW1lOiBcIk1vYlhcIiB9LFxuICAgICAgICB7IG5hbWU6IFwiU3R5bHVzXCIgfSxcbiAgICAgICAgeyBuYW1lOiBcIlNDU1NcIiB9LFxuICAgICAgICB7IG5hbWU6IFwiV2VicGFja1wiLCBoaWdobGlnaHQ6IHRydWUgfSxcbiAgICAgICAgeyBuYW1lOiBcIlBhcmNlbFwiIH0sXG4gICAgICAgIHsgbmFtZTogXCJHdWxwXCIgfSxcbiAgICBdLFxuICAgIFwiQmFja2VuZCBhbmQgRGF0YWJhc2VcIjogW1xuICAgICAgICB7IG5hbWU6IFwiTm9kZS5qc1wiLCBoaWdobGlnaHQ6IHRydWUgfSxcbiAgICAgICAgeyBuYW1lOiBcIkV4cHJlc3MuanNcIiB9LFxuICAgICAgICB7IG5hbWU6IFwiU2VxdWVsaXplXCIgfSxcbiAgICAgICAgeyBuYW1lOiBcIk15U1FMXCIgfSxcbiAgICAgICAgeyBuYW1lOiBcIlBvc3RncmVTUUxcIiB9LFxuICAgIF0sXG4gICAgXCJEZXYgdG9vbHNcIjogW1xuICAgICAgICB7IG5hbWU6IFwiV2ViU3Rvcm1cIiwgaGlnaGxpZ2h0OiB0cnVlIH0sXG4gICAgICAgIHsgbmFtZTogXCJWaXN1YWwgU3R1ZGlvIENvZGVcIiB9LFxuICAgICAgICB7IG5hbWU6IFwiR2l0XCIgfSxcbiAgICAgICAgeyBuYW1lOiBcIlBvd2VyU2hlbGxcIiB9LFxuICAgICAgICB7IG5hbWU6IFwiUG9zdG1hblwiIH0sXG4gICAgXSxcbn1cblxuZXhwb3J0IGNvbnN0IEV4cGVyaWVuY2VEYXRhOiBFeHBlcmllbmNlRGF0YVRbXSA9IFtcbiAgICB7XG4gICAgICAgIGNvbXBhbnk6IFwiaW5ub3RlY2hcIixcbiAgICAgICAgY29tcGFueUxpbms6IFwiaHR0cHM6Ly9pbm5vLnRlY2gvXCIsXG4gICAgICAgIHBvc2l0aW9uOiBcIkZyb250ZW5kIGRldmVsb3BlclwiLFxuICAgICAgICBkYXRlU3RhcnQ6IFwiYXByaWwgMjAyMlwiLFxuICAgICAgICBkYXRlRW5kOiBcImN1cnJlbnQgdGltZVwiLFxuICAgICAgICByZXNwb25zaWJpbGl0aWVzOiBbXG4gICAgICAgICAgICBcItCf0L7QtNC00LXRgNC20LrQsCDQuCDQtNC+0YDQsNCx0L7RgtC60LAg0L/RgNC+0LTRg9C60YLQsCAo0YTQvtGA0LzRiywg0LHQsNCz0LgsINC00L7RgdGC0YPQv9C90L7RgdGC0YwpXCIsXG4gICAgICAgICAgICBcItCf0LXRgNC10LLQvtC0INGC0LXQutGD0YnQtdCz0L4g0L/RgNC+0LTRg9C60YLQsCDQvdCwINC80LjQutGA0L7RgdC10YDQstC40YHQvdC+0LUg0LLQt9Cw0LjQvNC+0LTQtdC50YHRgtCy0LjQtVwiLFxuICAgICAgICAgICAgXCLQn9C10YDQtdCy0L7QtCDRhNGD0L3QutGG0LjQvtC90LDQu9CwINC/0YDQvtC00YPQutGC0LAg0YEgQ1JNIFNlaWJlbCDQvdCwINCw0YDRhdC40YLQtdC60YLRg9GA0YMg0LzQuNC60YDQvtGE0YDQvtC90YLQtdC90LTQvtCyXCIsXG4gICAgICAgICAgICBcItCc0LXQvdGC0L7RgNC40L3QsyDQtNC20YPQvdC40L7RgC3RgNCw0LfRgNCw0LHQvtGC0YfQuNC60LBcIixcbiAgICAgICAgXSxcbiAgICAgICAgdGVjaG5vbG9naWVzOiBbXG4gICAgICAgICAgICBcIlR5cGVTY3JpcHRcIixcbiAgICAgICAgICAgIFwiUmVhY3RcIixcbiAgICAgICAgICAgIFwiUmVkdXhcIixcbiAgICAgICAgICAgIFwiSmF2YVNjcmlwdFwiLFxuICAgICAgICAgICAgXCJzdHlsZWQtY29tcG9uZW50c1wiLFxuICAgICAgICAgICAgXCJSZWFjdCBRdWVyeVwiLFxuICAgICAgICAgICAgXCJGaWdtYVwiLFxuICAgICAgICAgICAgXCJUZWFtQ2l0eVwiLFxuICAgICAgICAgICAgXCJCaXRCdWNrZXRcIixcbiAgICAgICAgICAgIFwiR2l0XCIsXG4gICAgICAgIF0sXG4gICAgfSxcbiAgICB7XG4gICAgICAgIGNvbXBhbnk6IFwiRVBBTSBTeXN0ZW1zIEluYy5cIixcbiAgICAgICAgY29tcGFueUxpbms6IFwiaHR0cHM6Ly93d3cuZXBhbS5jb20vXCIsXG4gICAgICAgIHBvc2l0aW9uOiBcIkZyb250ZW5kIGRldmVsb3BlclwiLFxuICAgICAgICBkYXRlU3RhcnQ6IFwianVuZSAyMDIxXCIsXG4gICAgICAgIGRhdGVFbmQ6IFwiYXByaWwgMjAyMlwiLFxuICAgICAgICByZXNwb25zaWJpbGl0aWVzOiBbXG4gICAgICAgICAgICBcItCg0LDQt9GA0LDQsdC+0YLQutCwINC90L7QstC+0LPQviDQv9GA0L7QtNGD0LrRgtCwIMKr0J/QvtC00L/QuNGB0LrQuCDQvdCwINCw0LLRgtC+wrsg0LTQu9GPINC00L7Qu9Cz0L7RgdGA0L7Rh9C90L7QuSDQsNGA0LXQvdC00Ysg0YEg0L3Rg9C70Y8g0LTQviDQv9GA0L7QtNCw0LrRiNC10L3QsFwiLFxuICAgICAgICAgICAgXCLQoNCw0LHQvtGC0LAg0YEgQTExeSAoYWNjZXNzZWJpbGl0eSlcIixcbiAgICAgICAgICAgIFwi0JrRgNC+0YHRgdCx0YDQsNGD0LfQtdGA0L3QsNGPINCy0LXRgNGB0YLQutCwXCIsXG4gICAgICAgIF0sXG4gICAgICAgIHRlY2hub2xvZ2llczogW1xuICAgICAgICAgICAgXCJSZWFjdFwiLFxuICAgICAgICAgICAgXCJUeXBlU2NyaXB0XCIsXG4gICAgICAgICAgICBcIlJlZHV4XCIsXG4gICAgICAgICAgICBcIkphdmFTY3JpcHRcIixcbiAgICAgICAgICAgIFwiQ1NTLWluLUpTXCIsXG4gICAgICAgICAgICBcIkZpZ21hIERlc2lnblwiLFxuICAgICAgICAgICAgXCJUZWFtQ2l0eVwiLFxuICAgICAgICAgICAgXCJHaXRcIixcbiAgICAgICAgXSxcbiAgICB9LFxuICAgIHtcbiAgICAgICAgY29tcGFueTogXCJMTEMgR2F6cHJvbSBOZWZ0IOKAkyBEaWdpdGFsIFNvbHV0aW9uc1wiLFxuICAgICAgICBjb21wYW55TGluazogXCJodHRwczovL3d3dy5nYXpwcm9tLW5lZnQucnUvXCIsXG4gICAgICAgIHBvc2l0aW9uOiBcIkZyb250ZW5kIGRldmVsb3BlclwiLFxuICAgICAgICBkYXRlU3RhcnQ6IFwiamFudWFyeSAyMDIxXCIsXG4gICAgICAgIGRhdGVFbmQ6IFwianVuZSAyMDIxXCIsXG4gICAgICAgIHJlc3BvbnNpYmlsaXRpZXM6IFtcbiAgICAgICAgICAgIFwi0KDQsNC30YDQsNCx0L7RgtC60LAg0LjQvdGC0LXRgNGE0LXQudGB0LAg0YDQsNGB0L/RgNC10LTQtdC70LXQvdC90L7QuSDRgdC40YHRgtC10LzRiyDQutC+0L3RgtGA0L7Qu9GPINC4INC/0YDQvtCz0L3QvtC30LjRgNC+0LLQsNC90LjRjyDRgNCw0LfRgNCw0LHQvtGC0LrQuCDQvdC+0LLRi9GFINC80LXRgdGC0L7RgNC+0LbQtNC10L3QuNC5LCDQvdC10YTRgtC10LTQvtCx0YvRh9C4ICsg0YTQvtGA0LzQuNGA0L7QstCw0L3QuNGPINC+0YLRh9C10YLQvdC+0YHRgtC4INC/0L4g0LjQvNC10Y7RidC40LzRgdGPLlwiLFxuICAgICAgICAgICAgXCLQn9C+0LTQtNC10YDQttC60LAg0Lgg0LTQvtGA0LDQsdC+0YLQutCwINGB0LjRgdGC0LXQvNGLINC00LDRiNCx0L7RgNC00L7QsiAo0LjQvdGE0L7RgdC10YDQstC40YEg0YEg0YDQsNC30LvQuNGH0L3Ri9C80Lgg0LPRgNCw0YTQuNC60LDQvNC4INC4INGB0L7RgdGC0LDQstC70LXQvdC40LXQvCDQvtGC0YfQtdGC0L7QsilcIixcbiAgICAgICAgXSxcbiAgICAgICAgdGVjaG5vbG9naWVzOiBbXG4gICAgICAgICAgICBcIlR5cGVTY3JpcHRcIixcbiAgICAgICAgICAgIFwiUmVhY3RKU1wiLFxuICAgICAgICAgICAgXCJHaXRcIixcbiAgICAgICAgICAgIFwiSmF2YVNjcmlwdFwiLFxuICAgICAgICAgICAgXCJHcmFwaFFMXCIsXG4gICAgICAgICAgICBcIkNTU1wiLFxuICAgICAgICAgICAgXCJXZWJwYWNrXCIsXG4gICAgICAgICAgICBcIkFwb2xsb1wiLFxuICAgICAgICAgICAgXCJEb2NrZXJcIixcbiAgICAgICAgICAgIFwiRzIgUGxvdFwiLFxuICAgICAgICAgICAgXCJBbnQgRGVzaWduIENoYXJ0c1wiLFxuICAgICAgICBdLFxuICAgIH0sXG4gICAge1xuICAgICAgICBjb21wYW55OiBcIktvbnR1clwiLFxuICAgICAgICBjb21wYW55TGluazogXCJodHRwczovL2tvbnR1ci1pbmMuY29tL1wiLFxuICAgICAgICBwb3NpdGlvbjogXCJTb2Z0d2FyZSBFbmdpbmVlciAod2ViKVwiLFxuICAgICAgICBkYXRlU3RhcnQ6IFwic2VwdGVtYmVyIDIwMTlcIixcbiAgICAgICAgZGF0ZUVuZDogXCJkZWNlbWJlciAyMDIwXCIsXG4gICAgICAgIHJlc3BvbnNpYmlsaXRpZXM6IFtcbiAgICAgICAgICAgIFwi0KDQsNC30YDQsNCx0L7RgtC60LAg0LjQvdGC0LXRgNGE0LXQudGB0L7QsiDRgdC40YHRgtC10Lwg0YTQvtGA0LzQuNGA0L7QstCw0L3QuNGPINC4INC+0YLQv9GA0LDQstC60Lgg0Y3Qu9C10LrRgtGA0L7QvdC90L7QuSDQvtGC0YfQtdGC0L3QvtGB0YLQuCDRgSDQv9C10YDRgdC+0L3QsNC70YzQvdGL0LzQuCDQtNCw0L3QvdGL0LzQuCDRgSDQv9C+0LTQv9C40YHQsNC90LjQtdC8INGN0LvQtdC60YLRgNC+0L3QvdC+0Lkg0L/QvtC00L/QuNGB0YzRjlwiLFxuICAgICAgICAgICAgXCLQoNCw0LfRgNCw0LHQvtGC0LDQuyDRhNC+0YDQvNGDINGBINCy0LDQu9C40LTQsNGG0LjRj9C80Lgg0Lgg0LrRgNC+0YHRgS3Qv9GA0L7QstC10YDQutCw0LzQuCDQvdCwIFJlYWN0ICsgVFMgKyBSZWR1eCDQtNC70Y8g0LfQsNC/0L7Qu9C90LXQvdC40Y8g0L7RgtGH0LXRgtC90L7RgdGC0Lgg0LIg0KTQndChXCIsXG4gICAgICAgICAgICBcItCf0LXRgNC10LLQvtC0INC/0YDQvtC10LrRgtCwINC90LAgUmVhY3Qg0YEgUmF6b3IgKENTaGFycCkgKyBKUXVlcnkgKyBrbm9ja291dC5qc1wiLFxuICAgICAgICAgICAgXCLQntC/0YLQuNC80LjQt9C40YDQvtCy0LDQuyDQv9GA0L7RhtC10YHRgSDRgdCx0L7RgNC60Lgg0L/RgNC40LvQvtC20LXQvdC40Y8g0LjQtyDQvdC10YHQutC+0LvRjNC60LjRhSDRgNC10L/QvtC30LjRgtC+0YDQuNC10LIgKNCy0YDQtdC80Y8g0YHQsdC+0YDQutC4INGD0LzQtdC90YzRiNC40LvQvtGB0Ywg0YEgMzAg0LzQuNC90YPRgiDQtNC+IDUg0LzQuNC90YPRglwiLFxuICAgICAgICBdLFxuICAgICAgICB0ZWNobm9sb2dpZXM6IFtcbiAgICAgICAgICAgIFwiVHlwZXNjcmlwdFwiLFxuICAgICAgICAgICAgXCIgUmVhY3RKU1wiLFxuICAgICAgICAgICAgXCIgUmVkdXhcIixcbiAgICAgICAgICAgIFwiIEdpdFwiLFxuICAgICAgICAgICAgXCIgSmF2YVNjcmlwdFwiLFxuICAgICAgICAgICAgXCIgSlF1ZXJ5XCIsXG4gICAgICAgICAgICBcIiBTdHlsdXNcIixcbiAgICAgICAgICAgIFwiIENTU1wiLFxuICAgICAgICAgICAgXCIgV2VicGFja1wiLFxuICAgICAgICAgICAgXCIgcG5wbVwiLFxuICAgICAgICAgICAgXCIgUG93ZXJTaGVsbFwiLFxuICAgICAgICAgICAgXCIgUmF6b3IgKENTaGFycClcIixcbiAgICAgICAgXSxcbiAgICB9LFxuXVxuIiwiaW1wb3J0IFJlYWN0IGZyb20gXCJyZWFjdFwiXG5pbXBvcnQgXCIuLi9NYWluLnNjc3NcIlxuaW1wb3J0IFwiLi9Ta2lsbHMuc2Nzc1wiXG5pbXBvcnQgeyBTa2lsbHNEYXRhIH0gZnJvbSBcIi4uLy4uLy4uL2RhdGFcIlxuXG5leHBvcnQgY29uc3QgU2tpbGxzID0gKCkgPT4ge1xuICAgIHJldHVybiAoXG4gICAgICAgIDw+XG4gICAgICAgICAgICB7T2JqZWN0LmtleXMoU2tpbGxzRGF0YSkubWFwKGtleSA9PiAoXG4gICAgICAgICAgICAgICAgPFJlYWN0LkZyYWdtZW50IGtleT17a2V5fT5cbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9e1wic2tpbGxUaXRsZVwifT57a2V5fTwvZGl2PlxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT17XCJza2lsbE5hbWVzXCJ9PlxuICAgICAgICAgICAgICAgICAgICAgICAge1NraWxsc0RhdGFba2V5XS5tYXAoc2tpbGwgPT4gKFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXZcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAga2V5PXtza2lsbC5uYW1lfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbGFzc05hbWU9e2Bza2lsbE5hbWUgJHtza2lsbC5oaWdobGlnaHQgPyBcImhpZ2hsaWdodFwiIDogXCJcIn1gfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge3NraWxsLm5hbWV9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICApKX1cbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgPC9SZWFjdC5GcmFnbWVudD5cbiAgICAgICAgICAgICkpfVxuICAgICAgICA8Lz5cbiAgICApXG59XG5cbmV4cG9ydCBkZWZhdWx0IFNraWxsc1xuIiwiaW1wb3J0IFJlYWN0IGZyb20gXCJyZWFjdFwiXG5pbXBvcnQgXCIuLi9NYWluLnNjc3NcIlxuaW1wb3J0IFwiLi9FeHBlcmllbmNlLnNjc3NcIlxuaW1wb3J0IHsgRXhwZXJpZW5jZURhdGEgfSBmcm9tIFwiLi4vLi4vLi4vZGF0YVwiXG5cbmV4cG9ydCBjb25zdCBFeHBlcmllbmNlID0gKCkgPT4ge1xuICAgIHJldHVybiAoXG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPXtcImV4cGVyaWVuY2VzV3JhcHBlclwifT5cbiAgICAgICAgICAgIHtFeHBlcmllbmNlRGF0YS5tYXAoaXRlbSA9PiAoXG4gICAgICAgICAgICAgICAgPGRpdiBrZXk9e2l0ZW0uY29tcGFueX0gY2xhc3NOYW1lPXtcImV4cGVyaWVuY2VXcmFwcGVyXCJ9PlxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT17XCJleHBlcmllbmNlRGF0ZVwifT5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXY+e2l0ZW0uZGF0ZUVuZH08L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPXtcImRhc2hcIn0+e1wi4q6MXCJ9PC9kaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2PntpdGVtLmRhdGVTdGFydH08L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPXtcImV4cGVyaWVuY2VJbmZvXCJ9PlxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9e1wiY29tcGFueUluZm9cIn0+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9e1wiY29tcGFueVwifT57aXRlbS5jb21wYW55fTwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhyZWY9e2l0ZW0uY29tcGFueUxpbmt9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRhcmdldD17XCJfYmxhbmtcIn1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lPXtcImxpbmtcIn1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGl0bGU9e2BnbyB0byAke2l0ZW0uY29tcGFueX0gc2l0ZWB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlbD1cIm5vcmVmZXJyZXJcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHN2Z1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lPXtcImxpbmtpY29uXCJ9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB4bWxucz1cImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZpbGw9XCJjdXJyZW50Q29sb3JcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmlld0JveD1cIjAgMCAxNiAxNlwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB3aWR0aD17MTZ9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBoZWlnaHQ9ezE2fVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cGF0aCBkPVwiTTQuNzE1IDYuNTQyIDMuMzQzIDcuOTE0YTMgMyAwIDEgMCA0LjI0MyA0LjI0M2wxLjgyOC0xLjgyOUEzIDMgMCAwIDAgOC41ODYgNS41TDggNi4wODZhMS4wMDIgMS4wMDIgMCAwIDAtLjE1NC4xOTkgMiAyIDAgMCAxIC44NjEgMy4zMzdMNi44OCAxMS40NWEyIDIgMCAxIDEtMi44My0yLjgzbC43OTMtLjc5MmE0LjAxOCA0LjAxOCAwIDAgMS0uMTI4LTEuMjg3elwiIC8+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cGF0aCBkPVwiTTYuNTg2IDQuNjcyQTMgMyAwIDAgMCA3LjQxNCA5LjVsLjc3NS0uNzc2YTIgMiAwIDAgMS0uODk2LTMuMzQ2TDkuMTIgMy41NWEyIDIgMCAxIDEgMi44MyAyLjgzbC0uNzkzLjc5MmMuMTEyLjQyLjE1NS44NTUuMTI4IDEuMjg3bDEuMzcyLTEuMzcyYTMgMyAwIDEgMC00LjI0My00LjI0M0w2LjU4NiA0LjY3MnpcIiAvPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3N2Zz5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge2l0ZW0uY29tcGFueUxpbmt9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9hPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPXtcInBvc2l0aW9uXCJ9PntpdGVtLnBvc2l0aW9ufTwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICA8dWw+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAge2l0ZW0ucmVzcG9uc2liaWxpdGllcy5tYXAoZ29hbHMgPT4gKFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGkga2V5PXtnb2Fsc30+e2dvYWxzfTwvbGk+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgKSl9XG4gICAgICAgICAgICAgICAgICAgICAgICA8L3VsPlxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB7aXRlbS50ZWNobm9sb2dpZXMubWFwKHRlY2hub2xvZ3kgPT4gKFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBrZXk9e3RlY2hub2xvZ3l9IGNsYXNzTmFtZT17XCJ0ZWNobm9sb2d5XCJ9PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge3RlY2hub2xvZ3l9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvc3Bhbj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICApKX1cbiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICkpfVxuICAgICAgICA8L2Rpdj5cbiAgICApXG59XG5cbmV4cG9ydCBkZWZhdWx0IEV4cGVyaWVuY2VcbiIsImltcG9ydCB7IE1haW5JbmZvIH0gZnJvbSBcIi4vTWFpbkluZm9cIlxuaW1wb3J0IFNraWxscyBmcm9tIFwiLi9za2lsbHMvU2tpbGxzXCJcbmltcG9ydCBFeHBlcmllbmNlIGZyb20gXCIuL2V4cGVyaWVuY2UvRXhwZXJpZW5jZVwiXG5pbXBvcnQgUmVhY3QgZnJvbSBcInJlYWN0XCJcbmltcG9ydCB7IE5hdmlnYXRpb25UIH0gZnJvbSBcIi4uLy4uL3R5cGVzXCJcblxudHlwZSBQcm9wcyA9IHtcbiAgICBuYXY6IE5hdmlnYXRpb25UXG59XG5leHBvcnQgY29uc3QgQ3VycmVudEluZm8gPSBSZWFjdC5tZW1vKCh7IG5hdiB9OiBQcm9wcykgPT4ge1xuICAgIHN3aXRjaCAobmF2KSB7XG4gICAgICAgIGNhc2UgXCJtYWluXCI6XG4gICAgICAgICAgICByZXR1cm4gPE1haW5JbmZvIC8+XG4gICAgICAgIGNhc2UgXCJza2lsbHNcIjpcbiAgICAgICAgICAgIHJldHVybiA8U2tpbGxzIC8+XG4gICAgICAgIGNhc2UgXCJleHBlcmllbmNlXCI6XG4gICAgICAgICAgICByZXR1cm4gPEV4cGVyaWVuY2UgLz5cbiAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgIHJldHVybiA8TWFpbkluZm8gLz5cbiAgICB9XG59KVxuXG5DdXJyZW50SW5mby5kaXNwbGF5TmFtZSA9IFwiQ3VycmVudEluZm9cIlxuIiwiaW1wb3J0IFJlYWN0IGZyb20gXCJyZWFjdFwiXG5pbXBvcnQgeyBhbmltYXRlZCwgdXNlVHJhaWwgfSBmcm9tIFwiQHJlYWN0LXNwcmluZy93ZWJcIlxuaW1wb3J0IHVzZU1lYXN1cmUgZnJvbSBcInJlYWN0LXVzZS1tZWFzdXJlXCJcblxuaW1wb3J0IFwiLi9NYWluLnNjc3NcIlxuaW1wb3J0IHsgTmF2aWdhdGlvblQgfSBmcm9tIFwiLi4vLi4vdHlwZXNcIlxuaW1wb3J0IHsgQ3VycmVudEluZm8gfSBmcm9tIFwiLi9DdXJyZW50SW5mb1wiXG5cbnR5cGUgTWFpblByb3BzID0ge1xuICAgIG5hdjogTmF2aWdhdGlvblRcbn1cblxuY29uc3QgZmFzdCA9IHsgdGVuc2lvbjogMTIwMCwgZnJpY3Rpb246IDQwIH1cbmNvbnN0IHNsb3cgPSB7IG1hc3M6IDEwLCB0ZW5zaW9uOiAxOTAsIGZyaWN0aW9uOiA1MCB9XG5jb25zdCB0cmFucyA9ICh4OiBudW1iZXIsIHk6IG51bWJlcikgPT4gYHRyYW5zbGF0ZTNkKCR7eH1weCwke3l9cHgsMCkgdHJhbnNsYXRlM2QoLTUwJSwtNTAlLDApYFxuZXhwb3J0IGNvbnN0IE1haW4gPSAoeyBuYXYgfTogTWFpblByb3BzKSA9PiB7XG4gICAgY29uc3QgW3RyYWlsLCBhcGldID0gdXNlVHJhaWwoMywgaSA9PiAoe1xuICAgICAgICB4eTogWzAsIDBdLFxuICAgICAgICBjb25maWc6IGkgPT09IDAgPyBmYXN0IDogc2xvdyxcbiAgICB9KSlcbiAgICBjb25zdCBbcmVmLCB7IGxlZnQsIHRvcCB9XSA9IHVzZU1lYXN1cmUoKVxuXG4gICAgY29uc3QgaGFuZGxlTW91c2VNb3ZlID0gKGU6IHsgY2xpZW50WDogbnVtYmVyOyBjbGllbnRZOiBudW1iZXIgfSkgPT4ge1xuICAgICAgICBhcGkuc3RhcnQoeyB4eTogW2UuY2xpZW50WCAtIGxlZnQsIGUuY2xpZW50WSAtIHRvcF0gfSlcbiAgICB9XG5cbiAgICByZXR1cm4gKFxuICAgICAgICA8bWFpbiBjbGFzc05hbWU9e1wibWFpblwifT5cbiAgICAgICAgICAgIDxzdmcgc3R5bGU9e3sgcG9zaXRpb246IFwiYWJzb2x1dGVcIiwgd2lkdGg6IDAsIGhlaWdodDogMCB9fT5cbiAgICAgICAgICAgICAgICA8ZmlsdGVyIGlkPVwiYWxsb3dlbXB0eWlucHV0XCI+XG4gICAgICAgICAgICAgICAgICAgIDxmZUdhdXNzaWFuQmx1ciBpbj1cIlNvdXJjZUdyYXBoaWNcIiByZXN1bHQ9XCJibHVyXCIgc3RkRGV2aWF0aW9uPVwiMzVcIiAvPlxuICAgICAgICAgICAgICAgICAgICA8ZmVDb2xvck1hdHJpeCBpbj1cImJsdXJcIiB2YWx1ZXM9XCIxIDAgMCAwIDAgMCAxIDAgMCAwIDAgMCAxIDAgMCAwIDAgMCAzMCAtN1wiIC8+XG4gICAgICAgICAgICAgICAgPC9maWx0ZXI+XG4gICAgICAgICAgICA8L3N2Zz5cbiAgICAgICAgICAgIDxkaXYgcmVmPXtyZWZ9IGNsYXNzTmFtZT17XCJob29rcy1tYWluXCJ9IG9uTW91c2VNb3ZlPXtoYW5kbGVNb3VzZU1vdmV9PlxuICAgICAgICAgICAgICAgIHt0cmFpbC5tYXAoKHsgeHkgfSwgaW5kZXgpID0+IChcbiAgICAgICAgICAgICAgICAgICAgPGFuaW1hdGVkLmRpdiBrZXk9e2luZGV4fSBzdHlsZT17eyB0cmFuc2Zvcm06IHh5LnRvKHRyYW5zKSB9fSAvPlxuICAgICAgICAgICAgICAgICkpfVxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImdyZWV0XCIgb25Nb3VzZU1vdmU9e2hhbmRsZU1vdXNlTW92ZX0+XG4gICAgICAgICAgICAgICAgPEN1cnJlbnRJbmZvIG5hdj17bmF2fSAvPlxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgIDwvbWFpbj5cbiAgICApXG59XG5cbmV4cG9ydCBkZWZhdWx0IE1haW5cbiIsImltcG9ydCBSZWFjdCwgeyBEaXNwYXRjaCwgU2V0U3RhdGVBY3Rpb24gfSBmcm9tIFwicmVhY3RcIlxuaW1wb3J0IFwiLi9IZWFkZXIuc2Nzc1wiXG5pbXBvcnQgeyBOYXZpZ2F0aW9uVCB9IGZyb20gXCIuLi8uLi90eXBlc1wiXG5cbnR5cGUgSGVhZGVyUHJvcHMgPSB7XG4gICAgbmF2OiBOYXZpZ2F0aW9uVFxuICAgIGNoYW5nZU5hdjogRGlzcGF0Y2g8U2V0U3RhdGVBY3Rpb248TmF2aWdhdGlvblQ+PlxufVxuXG5leHBvcnQgY29uc3QgSGVhZGVyID0gKHsgbmF2LCBjaGFuZ2VOYXYgfTogSGVhZGVyUHJvcHMpID0+IHtcbiAgICBjb25zdCBvbkNsaWNrSGFuZGxlciA9IChlOiBSZWFjdC5TeW50aGV0aWNFdmVudCkgPT4ge1xuICAgICAgICBlLnN0b3BQcm9wYWdhdGlvbigpXG4gICAgICAgIGUucHJldmVudERlZmF1bHQoKVxuXG4gICAgICAgIGNvbnN0IHRhcmdldCA9IGUudGFyZ2V0IGFzIEhUTUxUZXh0QXJlYUVsZW1lbnRcbiAgICAgICAgY2hhbmdlTmF2KHRhcmdldC5pZCBhcyBOYXZpZ2F0aW9uVClcbiAgICB9XG5cbiAgICByZXR1cm4gKFxuICAgICAgICA8aGVhZGVyPlxuICAgICAgICAgICAgPG5hdiBjbGFzc05hbWU9e1wibmF2XCJ9PlxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPXtcImxpbmtzXCJ9PlxuICAgICAgICAgICAgICAgICAgICA8YnV0dG9uXG4gICAgICAgICAgICAgICAgICAgICAgICBjbGFzc05hbWU9e2Btb25vZ3JhbSBsb2dvbGluayAke25hdiA9PT0gXCJtYWluXCIgPyBcImxvZ29saW5rLWFjdGl2ZVwiIDogXCJcIn1gfVxuICAgICAgICAgICAgICAgICAgICAgICAgaWQ9e1wibWFpblwifVxuICAgICAgICAgICAgICAgICAgICAgICAgb25DbGljaz17b25DbGlja0hhbmRsZXJ9XG4gICAgICAgICAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICAgICAgICAgIEVBXG4gICAgICAgICAgICAgICAgICAgIDwvYnV0dG9uPlxuICAgICAgICAgICAgICAgICAgICA8YnV0dG9uXG4gICAgICAgICAgICAgICAgICAgICAgICBjbGFzc05hbWU9e2BsaW5rICR7bmF2ID09PSBcInNraWxsc1wiID8gXCJsaW5rLWFjdGl2ZVwiIDogXCJcIn1gfVxuICAgICAgICAgICAgICAgICAgICAgICAgaWQ9e1wic2tpbGxzXCJ9XG4gICAgICAgICAgICAgICAgICAgICAgICBvbkNsaWNrPXtvbkNsaWNrSGFuZGxlcn1cbiAgICAgICAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgICAgICAgICAgU2tpbGxzXG4gICAgICAgICAgICAgICAgICAgIDwvYnV0dG9uPlxuICAgICAgICAgICAgICAgICAgICA8YnV0dG9uXG4gICAgICAgICAgICAgICAgICAgICAgICBjbGFzc05hbWU9e2BsaW5rICR7bmF2ID09PSBcImV4cGVyaWVuY2VcIiA/IFwibGluay1hY3RpdmVcIiA6IFwiXCJ9YH1cbiAgICAgICAgICAgICAgICAgICAgICAgIGlkPXtcImV4cGVyaWVuY2VcIn1cbiAgICAgICAgICAgICAgICAgICAgICAgIG9uQ2xpY2s9e29uQ2xpY2tIYW5kbGVyfVxuICAgICAgICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgICAgICAgICBFeHBlcmllbmNlXG4gICAgICAgICAgICAgICAgICAgIDwvYnV0dG9uPlxuICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPXtcImxpbmtzXCJ9PlxuICAgICAgICAgICAgICAgICAgICA8YVxuICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lPXtcInNvY2lhbFwifVxuICAgICAgICAgICAgICAgICAgICAgICAgaHJlZj1cImh0dHBzOi8vdC5tZS9hbGxvd2VtcHR5aW5wdXRcIlxuICAgICAgICAgICAgICAgICAgICAgICAgdGl0bGU9XCJ0ZWxlZ3JhbVwiXG4gICAgICAgICAgICAgICAgICAgICAgICB0YXJnZXQ9e1wiX2JsYW5rXCJ9XG4gICAgICAgICAgICAgICAgICAgICAgICByZWw9XCJub3JlZmVycmVyXCJcbiAgICAgICAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgICAgICAgICAgPHN2Z1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHdpZHRoPXsxNn1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBoZWlnaHQ9ezE2fVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZT17XCJzb2NpYWxpY29uXCJ9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgeG1sbnM9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmlld0JveD1cIjAgMCAxNiAxNlwiXG4gICAgICAgICAgICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPHBhdGggZD1cIk0xNiA4QTggOCAwIDEgMSAwIDhhOCA4IDAgMCAxIDE2IDB6TTguMjg3IDUuOTA2Yy0uNzc4LjMyNC0yLjMzNC45OTQtNC42NjYgMi4wMS0uMzc4LjE1LS41NzcuMjk4LS41OTUuNDQyLS4wMy4yNDMuMjc1LjMzOS42OS40N2wuMTc1LjA1NWMuNDA4LjEzMy45NTguMjg4IDEuMjQzLjI5NC4yNi4wMDYuNTQ5LS4xLjg2OC0uMzIgMi4xNzktMS40NzEgMy4zMDQtMi4yMTQgMy4zNzQtMi4yMy4wNS0uMDEyLjEyLS4wMjYuMTY2LjAxNi4wNDcuMDQxLjA0Mi4xMi4wMzcuMTQxLS4wMy4xMjktMS4yMjcgMS4yNDEtMS44NDYgMS44MTctLjE5My4xOC0uMzMuMzA3LS4zNTguMzM2YTguMTU0IDguMTU0IDAgMCAxLS4xODguMTg2Yy0uMzguMzY2LS42NjQuNjQuMDE1IDEuMDg4LjMyNy4yMTYuNTg5LjM5My44NS41NzEuMjg0LjE5NC41NjguMzg3LjkzNi42MjkuMDkzLjA2LjE4My4xMjUuMjcuMTg3LjMzMS4yMzYuNjMuNDQ4Ljk5Ny40MTQuMjE0LS4wMi40MzUtLjIyLjU0Ny0uODIuMjY1LTEuNDE3Ljc4Ni00LjQ4Ni45MDYtNS43NTFhMS40MjYgMS40MjYgMCAwIDAtLjAxMy0uMzE1LjMzNy4zMzcgMCAwIDAtLjExNC0uMjE3LjUyNi41MjYgMCAwIDAtLjMxLS4wOTNjLS4zLjAwNS0uNzYzLjE2Ni0yLjk4NCAxLjA5elwiIC8+XG4gICAgICAgICAgICAgICAgICAgICAgICA8L3N2Zz5cbiAgICAgICAgICAgICAgICAgICAgPC9hPlxuICAgICAgICAgICAgICAgICAgICA8YVxuICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lPXtcInNvY2lhbFwifVxuICAgICAgICAgICAgICAgICAgICAgICAgaHJlZj1cImh0dHBzOi8vZ2l0aHViLmNvbS9hc2htZWVcIlxuICAgICAgICAgICAgICAgICAgICAgICAgdGl0bGU9XCJnaXRodWJcIlxuICAgICAgICAgICAgICAgICAgICAgICAgdGFyZ2V0PXtcIl9ibGFua1wifVxuICAgICAgICAgICAgICAgICAgICAgICAgcmVsPVwibm9yZWZlcnJlclwiXG4gICAgICAgICAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxzdmdcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB3aWR0aD17MTZ9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaGVpZ2h0PXsxNn1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbGFzc05hbWU9e1wic29jaWFsaWNvblwifVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHhtbG5zPVwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZpZXdCb3g9XCIwIDAgMTYgMTZcIlxuICAgICAgICAgICAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwYXRoIGQ9XCJNOCAwQzMuNTggMCAwIDMuNTggMCA4YzAgMy41NCAyLjI5IDYuNTMgNS40NyA3LjU5LjQuMDcuNTUtLjE3LjU1LS4zOCAwLS4xOS0uMDEtLjgyLS4wMS0xLjQ5LTIuMDEuMzctMi41My0uNDktMi42OS0uOTQtLjA5LS4yMy0uNDgtLjk0LS44Mi0xLjEzLS4yOC0uMTUtLjY4LS41Mi0uMDEtLjUzLjYzLS4wMSAxLjA4LjU4IDEuMjMuODIuNzIgMS4yMSAxLjg3Ljg3IDIuMzMuNjYuMDctLjUyLjI4LS44Ny41MS0xLjA3LTEuNzgtLjItMy42NC0uODktMy42NC0zLjk1IDAtLjg3LjMxLTEuNTkuODItMi4xNS0uMDgtLjItLjM2LTEuMDIuMDgtMi4xMiAwIDAgLjY3LS4yMSAyLjIuODIuNjQtLjE4IDEuMzItLjI3IDItLjI3LjY4IDAgMS4zNi4wOSAyIC4yNyAxLjUzLTEuMDQgMi4yLS44MiAyLjItLjgyLjQ0IDEuMS4xNiAxLjkyLjA4IDIuMTIuNTEuNTYuODIgMS4yNy44MiAyLjE1IDAgMy4wNy0xLjg3IDMuNzUtMy42NSAzLjk1LjI5LjI1LjU0LjczLjU0IDEuNDggMCAxLjA3LS4wMSAxLjkzLS4wMSAyLjIgMCAuMjEuMTUuNDYuNTUuMzhBOC4wMTIgOC4wMTIgMCAwIDAgMTYgOGMwLTQuNDItMy41OC04LTgtOHpcIiAvPlxuICAgICAgICAgICAgICAgICAgICAgICAgPC9zdmc+XG4gICAgICAgICAgICAgICAgICAgIDwvYT5cbiAgICAgICAgICAgICAgICAgICAgPGFcbiAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZT17XCJzb2NpYWxcIn1cbiAgICAgICAgICAgICAgICAgICAgICAgIGhyZWY9XCJodHRwczovL3d3dy5saW5rZWRpbi5jb20vaW4vZXZnLWFzaC9cIlxuICAgICAgICAgICAgICAgICAgICAgICAgdGl0bGU9XCJsaW5rZWRpblwiXG4gICAgICAgICAgICAgICAgICAgICAgICB0YXJnZXQ9e1wiX2JsYW5rXCJ9XG4gICAgICAgICAgICAgICAgICAgICAgICByZWw9XCJub3JlZmVycmVyXCJcbiAgICAgICAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgICAgICAgICAgPHN2Z1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHdpZHRoPXsxNn1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBoZWlnaHQ9ezE2fVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZT17XCJzb2NpYWxpY29uXCJ9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgeG1sbnM9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmlld0JveD1cIjAgMCAxNiAxNlwiXG4gICAgICAgICAgICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPHBhdGggZD1cIk0wIDEuMTQ2QzAgLjUxMy41MjYgMCAxLjE3NSAwaDEzLjY1QzE1LjQ3NCAwIDE2IC41MTMgMTYgMS4xNDZ2MTMuNzA4YzAgLjYzMy0uNTI2IDEuMTQ2LTEuMTc1IDEuMTQ2SDEuMTc1Qy41MjYgMTYgMCAxNS40ODcgMCAxNC44NTRWMS4xNDZ6bTQuOTQzIDEyLjI0OFY2LjE2OUgyLjU0MnY3LjIyNWgyLjQwMXptLTEuMi04LjIxMmMuODM3IDAgMS4zNTgtLjU1NCAxLjM1OC0xLjI0OC0uMDE1LS43MDktLjUyLTEuMjQ4LTEuMzQyLTEuMjQ4LS44MjIgMC0xLjM1OS41NC0xLjM1OSAxLjI0OCAwIC42OTQuNTIxIDEuMjQ4IDEuMzI3IDEuMjQ4aC4wMTZ6bTQuOTA4IDguMjEyVjkuMzU5YzAtLjIxNi4wMTYtLjQzMi4wOC0uNTg2LjE3My0uNDMxLjU2OC0uODc4IDEuMjMyLS44NzguODY5IDAgMS4yMTYuNjYyIDEuMjE2IDEuNjM0djMuODY1aDIuNDAxVjkuMjVjMC0yLjIyLTEuMTg0LTMuMjUyLTIuNzY0LTMuMjUyLTEuMjc0IDAtMS44NDUuNy0yLjE2NSAxLjE5M3YuMDI1aC0uMDE2YTUuNTQgNS41NCAwIDAgMSAuMDE2LS4wMjVWNi4xNjloLTIuNGMuMDMuNjc4IDAgNy4yMjUgMCA3LjIyNWgyLjR6XCIgLz5cbiAgICAgICAgICAgICAgICAgICAgICAgIDwvc3ZnPlxuICAgICAgICAgICAgICAgICAgICA8L2E+XG4gICAgICAgICAgICAgICAgICAgIDxhIGNsYXNzTmFtZT17XCJzb2NpYWxcIn0gaHJlZj1cInRlbDorNzk4MjY1NDA2NzFcIiB0aXRsZT1cIm1vYmlsZSBwaG9uZVwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgPHN2Z1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHdpZHRoPXsxNn1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBoZWlnaHQ9ezE2fVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZT17XCJzb2NpYWxpY29uXCJ9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgeG1sbnM9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmlld0JveD1cIjAgMCAxNiAxNlwiXG4gICAgICAgICAgICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPHBhdGhcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZmlsbFJ1bGU9XCJldmVub2RkXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZD1cIk0xLjg4NS41MTFhMS43NDUgMS43NDUgMCAwIDEgMi42MS4xNjNMNi4yOSAyLjk4Yy4zMjkuNDIzLjQ0NS45NzQuMzE1IDEuNDk0bC0uNTQ3IDIuMTlhLjY3OC42NzggMCAwIDAgLjE3OC42NDNsMi40NTcgMi40NTdhLjY3OC42NzggMCAwIDAgLjY0NC4xNzhsMi4xODktLjU0N2ExLjc0NSAxLjc0NSAwIDAgMSAxLjQ5NC4zMTVsMi4zMDYgMS43OTRjLjgyOS42NDUuOTA1IDEuODcuMTYzIDIuNjExbC0xLjAzNCAxLjAzNGMtLjc0Ljc0LTEuODQ2IDEuMDY1LTIuODc3LjcwMmExOC42MzQgMTguNjM0IDAgMCAxLTcuMDEtNC40MiAxOC42MzQgMTguNjM0IDAgMCAxLTQuNDItNy4wMDljLS4zNjItMS4wMy0uMDM3LTIuMTM3LjcwMy0yLjg3N0wxLjg4NS41MTF6XCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgICAgICAgICAgICAgPC9zdmc+XG4gICAgICAgICAgICAgICAgICAgIDwvYT5cbiAgICAgICAgICAgICAgICAgICAgPGEgY2xhc3NOYW1lPXtcInNvY2lhbFwifSBocmVmPVwibWFpbHRvOmFzaG1lZTkwQGdtYWlsLmNvbVwiIHRpdGxlPVwiZW1haWxcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxzdmdcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbGFzc05hbWU9e1wic29jaWFsaWNvblwifVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHhtbG5zPVwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZpZXdCb3g9XCIwIDAgMTYgMTZcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHdpZHRoPXsxNn1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBoZWlnaHQ9ezE2fVxuICAgICAgICAgICAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwYXRoIGQ9XCJNLjA1IDMuNTU1QTIgMiAwIDAgMSAyIDJoMTJhMiAyIDAgMCAxIDEuOTUgMS41NTVMOCA4LjQxNC4wNSAzLjU1NVpNMCA0LjY5N3Y3LjEwNGw1LjgwMy0zLjU1OEwwIDQuNjk3Wk02Ljc2MSA4LjgzbC02LjU3IDQuMDI3QTIgMiAwIDAgMCAyIDE0aDEyYTIgMiAwIDAgMCAxLjgwOC0xLjE0NGwtNi41Ny00LjAyN0w4IDkuNTg2bC0xLjIzOS0uNzU3Wm0zLjQzNi0uNTg2TDE2IDExLjgwMVY0LjY5N2wtNS44MDMgMy41NDZaXCIgLz5cbiAgICAgICAgICAgICAgICAgICAgICAgIDwvc3ZnPlxuICAgICAgICAgICAgICAgICAgICA8L2E+XG4gICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICA8L25hdj5cbiAgICAgICAgPC9oZWFkZXI+XG4gICAgKVxufVxuXG5leHBvcnQgZGVmYXVsdCBIZWFkZXJcbiIsImltcG9ydCBSZWFjdCBmcm9tIFwicmVhY3RcIlxuaW1wb3J0IFJlYWN0RE9NIGZyb20gXCJyZWFjdC1kb21cIlxuaW1wb3J0IFwiLi9pbmRleC5zY3NzXCJcbmltcG9ydCBBcHAgZnJvbSBcIi4vQXBwXCJcblxuUmVhY3RET00ucmVuZGVyKFxuICAgIDxSZWFjdC5TdHJpY3RNb2RlPlxuICAgICAgICA8QXBwIC8+XG4gICAgPC9SZWFjdC5TdHJpY3RNb2RlPixcbiAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInJvb3RcIiksXG4pXG4iLCJpbXBvcnQgUmVhY3QsIHsgdXNlU3RhdGUgfSBmcm9tIFwicmVhY3RcIlxuaW1wb3J0IE1haW4gZnJvbSBcIi4vY29tcG9uZW50cy9tYWluL01haW5cIlxuaW1wb3J0IFwiLi9BcHAuc2Nzc1wiXG5pbXBvcnQgSGVhZGVyIGZyb20gXCIuL2NvbXBvbmVudHMvaGVhZGVyL0hlYWRlclwiXG5pbXBvcnQgeyBOYXZpZ2F0aW9uVCB9IGZyb20gXCIuL3R5cGVzXCJcblxuZnVuY3Rpb24gQXBwKCkge1xuICAgIGNvbnN0IFtjdXJyZW50TmF2LCBzZXRDdXJyZW50TmF2XSA9IHVzZVN0YXRlPE5hdmlnYXRpb25UPihcIm1haW5cIilcblxuICAgIHJldHVybiAoXG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPXtcImFwcFwifT5cbiAgICAgICAgICAgIDxIZWFkZXIgbmF2PXtjdXJyZW50TmF2fSBjaGFuZ2VOYXY9e3NldEN1cnJlbnROYXZ9IC8+XG4gICAgICAgICAgICA8TWFpbiBuYXY9e2N1cnJlbnROYXZ9IC8+XG4gICAgICAgIDwvZGl2PlxuICAgIClcbn1cblxuZXhwb3J0IGRlZmF1bHQgQXBwXG4iLCIvLyBUaGUgbW9kdWxlIGNhY2hlXG52YXIgX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fID0ge307XG5cbi8vIFRoZSByZXF1aXJlIGZ1bmN0aW9uXG5mdW5jdGlvbiBfX3dlYnBhY2tfcmVxdWlyZV9fKG1vZHVsZUlkKSB7XG5cdC8vIENoZWNrIGlmIG1vZHVsZSBpcyBpbiBjYWNoZVxuXHR2YXIgY2FjaGVkTW9kdWxlID0gX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fW21vZHVsZUlkXTtcblx0aWYgKGNhY2hlZE1vZHVsZSAhPT0gdW5kZWZpbmVkKSB7XG5cdFx0cmV0dXJuIGNhY2hlZE1vZHVsZS5leHBvcnRzO1xuXHR9XG5cdC8vIENyZWF0ZSBhIG5ldyBtb2R1bGUgKGFuZCBwdXQgaXQgaW50byB0aGUgY2FjaGUpXG5cdHZhciBtb2R1bGUgPSBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX19bbW9kdWxlSWRdID0ge1xuXHRcdC8vIG5vIG1vZHVsZS5pZCBuZWVkZWRcblx0XHQvLyBubyBtb2R1bGUubG9hZGVkIG5lZWRlZFxuXHRcdGV4cG9ydHM6IHt9XG5cdH07XG5cblx0Ly8gRXhlY3V0ZSB0aGUgbW9kdWxlIGZ1bmN0aW9uXG5cdF9fd2VicGFja19tb2R1bGVzX19bbW9kdWxlSWRdKG1vZHVsZSwgbW9kdWxlLmV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pO1xuXG5cdC8vIFJldHVybiB0aGUgZXhwb3J0cyBvZiB0aGUgbW9kdWxlXG5cdHJldHVybiBtb2R1bGUuZXhwb3J0cztcbn1cblxuLy8gZXhwb3NlIHRoZSBtb2R1bGVzIG9iamVjdCAoX193ZWJwYWNrX21vZHVsZXNfXylcbl9fd2VicGFja19yZXF1aXJlX18ubSA9IF9fd2VicGFja19tb2R1bGVzX187XG5cbiIsIi8vIGdldERlZmF1bHRFeHBvcnQgZnVuY3Rpb24gZm9yIGNvbXBhdGliaWxpdHkgd2l0aCBub24taGFybW9ueSBtb2R1bGVzXG5fX3dlYnBhY2tfcmVxdWlyZV9fLm4gPSBmdW5jdGlvbihtb2R1bGUpIHtcblx0dmFyIGdldHRlciA9IG1vZHVsZSAmJiBtb2R1bGUuX19lc01vZHVsZSA/XG5cdFx0ZnVuY3Rpb24oKSB7IHJldHVybiBtb2R1bGVbJ2RlZmF1bHQnXTsgfSA6XG5cdFx0ZnVuY3Rpb24oKSB7IHJldHVybiBtb2R1bGU7IH07XG5cdF9fd2VicGFja19yZXF1aXJlX18uZChnZXR0ZXIsIHsgYTogZ2V0dGVyIH0pO1xuXHRyZXR1cm4gZ2V0dGVyO1xufTsiLCIvLyBkZWZpbmUgZ2V0dGVyIGZ1bmN0aW9ucyBmb3IgaGFybW9ueSBleHBvcnRzXG5fX3dlYnBhY2tfcmVxdWlyZV9fLmQgPSBmdW5jdGlvbihleHBvcnRzLCBkZWZpbml0aW9uKSB7XG5cdGZvcih2YXIga2V5IGluIGRlZmluaXRpb24pIHtcblx0XHRpZihfX3dlYnBhY2tfcmVxdWlyZV9fLm8oZGVmaW5pdGlvbiwga2V5KSAmJiAhX193ZWJwYWNrX3JlcXVpcmVfXy5vKGV4cG9ydHMsIGtleSkpIHtcblx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBrZXksIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBkZWZpbml0aW9uW2tleV0gfSk7XG5cdFx0fVxuXHR9XG59OyIsIl9fd2VicGFja19yZXF1aXJlX18ubyA9IGZ1bmN0aW9uKG9iaiwgcHJvcCkgeyByZXR1cm4gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iaiwgcHJvcCk7IH0iLCIvLyBubyBiYXNlVVJJXG5cbi8vIG9iamVjdCB0byBzdG9yZSBsb2FkZWQgYW5kIGxvYWRpbmcgY2h1bmtzXG4vLyB1bmRlZmluZWQgPSBjaHVuayBub3QgbG9hZGVkLCBudWxsID0gY2h1bmsgcHJlbG9hZGVkL3ByZWZldGNoZWRcbi8vIFtyZXNvbHZlLCByZWplY3QsIFByb21pc2VdID0gY2h1bmsgbG9hZGluZywgMCA9IGNodW5rIGxvYWRlZFxudmFyIGluc3RhbGxlZENodW5rcyA9IHtcblx0MTc5OiAwXG59O1xuXG4vLyBubyBjaHVuayBvbiBkZW1hbmQgbG9hZGluZ1xuXG4vLyBubyBwcmVmZXRjaGluZ1xuXG4vLyBubyBwcmVsb2FkZWRcblxuLy8gbm8gSE1SXG5cbi8vIG5vIEhNUiBtYW5pZmVzdFxuXG5fX3dlYnBhY2tfcmVxdWlyZV9fLk8uaiA9IGZ1bmN0aW9uKGNodW5rSWQpIHsgcmV0dXJuIGluc3RhbGxlZENodW5rc1tjaHVua0lkXSA9PT0gMDsgfTtcblxuLy8gaW5zdGFsbCBhIEpTT05QIGNhbGxiYWNrIGZvciBjaHVuayBsb2FkaW5nXG52YXIgd2VicGFja0pzb25wQ2FsbGJhY2sgPSBmdW5jdGlvbihwYXJlbnRDaHVua0xvYWRpbmdGdW5jdGlvbiwgZGF0YSkge1xuXHR2YXIgY2h1bmtJZHMgPSBkYXRhWzBdO1xuXHR2YXIgbW9yZU1vZHVsZXMgPSBkYXRhWzFdO1xuXHR2YXIgcnVudGltZSA9IGRhdGFbMl07XG5cdC8vIGFkZCBcIm1vcmVNb2R1bGVzXCIgdG8gdGhlIG1vZHVsZXMgb2JqZWN0LFxuXHQvLyB0aGVuIGZsYWcgYWxsIFwiY2h1bmtJZHNcIiBhcyBsb2FkZWQgYW5kIGZpcmUgY2FsbGJhY2tcblx0dmFyIG1vZHVsZUlkLCBjaHVua0lkLCBpID0gMDtcblx0aWYoY2h1bmtJZHMuc29tZShmdW5jdGlvbihpZCkgeyByZXR1cm4gaW5zdGFsbGVkQ2h1bmtzW2lkXSAhPT0gMDsgfSkpIHtcblx0XHRmb3IobW9kdWxlSWQgaW4gbW9yZU1vZHVsZXMpIHtcblx0XHRcdGlmKF9fd2VicGFja19yZXF1aXJlX18ubyhtb3JlTW9kdWxlcywgbW9kdWxlSWQpKSB7XG5cdFx0XHRcdF9fd2VicGFja19yZXF1aXJlX18ubVttb2R1bGVJZF0gPSBtb3JlTW9kdWxlc1ttb2R1bGVJZF07XG5cdFx0XHR9XG5cdFx0fVxuXHRcdGlmKHJ1bnRpbWUpIHZhciByZXN1bHQgPSBydW50aW1lKF9fd2VicGFja19yZXF1aXJlX18pO1xuXHR9XG5cdGlmKHBhcmVudENodW5rTG9hZGluZ0Z1bmN0aW9uKSBwYXJlbnRDaHVua0xvYWRpbmdGdW5jdGlvbihkYXRhKTtcblx0Zm9yKDtpIDwgY2h1bmtJZHMubGVuZ3RoOyBpKyspIHtcblx0XHRjaHVua0lkID0gY2h1bmtJZHNbaV07XG5cdFx0aWYoX193ZWJwYWNrX3JlcXVpcmVfXy5vKGluc3RhbGxlZENodW5rcywgY2h1bmtJZCkgJiYgaW5zdGFsbGVkQ2h1bmtzW2NodW5rSWRdKSB7XG5cdFx0XHRpbnN0YWxsZWRDaHVua3NbY2h1bmtJZF1bMF0oKTtcblx0XHR9XG5cdFx0aW5zdGFsbGVkQ2h1bmtzW2NodW5rSWRdID0gMDtcblx0fVxuXHRyZXR1cm4gX193ZWJwYWNrX3JlcXVpcmVfXy5PKHJlc3VsdCk7XG59XG5cbnZhciBjaHVua0xvYWRpbmdHbG9iYWwgPSBzZWxmW1wid2VicGFja0NodW5rYXNobWVlX2dpdGh1Yl9pb1wiXSA9IHNlbGZbXCJ3ZWJwYWNrQ2h1bmthc2htZWVfZ2l0aHViX2lvXCJdIHx8IFtdO1xuY2h1bmtMb2FkaW5nR2xvYmFsLmZvckVhY2god2VicGFja0pzb25wQ2FsbGJhY2suYmluZChudWxsLCAwKSk7XG5jaHVua0xvYWRpbmdHbG9iYWwucHVzaCA9IHdlYnBhY2tKc29ucENhbGxiYWNrLmJpbmQobnVsbCwgY2h1bmtMb2FkaW5nR2xvYmFsLnB1c2guYmluZChjaHVua0xvYWRpbmdHbG9iYWwpKTsiLCIvLyBzdGFydHVwXG4vLyBMb2FkIGVudHJ5IG1vZHVsZSBhbmQgcmV0dXJuIGV4cG9ydHNcbi8vIFRoaXMgZW50cnkgbW9kdWxlIGRlcGVuZHMgb24gb3RoZXIgbG9hZGVkIGNodW5rcyBhbmQgZXhlY3V0aW9uIG5lZWQgdG8gYmUgZGVsYXllZFxudmFyIF9fd2VicGFja19leHBvcnRzX18gPSBfX3dlYnBhY2tfcmVxdWlyZV9fLk8odW5kZWZpbmVkLCBbNzM2XSwgZnVuY3Rpb24oKSB7IHJldHVybiBfX3dlYnBhY2tfcmVxdWlyZV9fKDgzNik7IH0pXG5fX3dlYnBhY2tfZXhwb3J0c19fID0gX193ZWJwYWNrX3JlcXVpcmVfXy5PKF9fd2VicGFja19leHBvcnRzX18pO1xuIl0sIm5hbWVzIjpbImRlZmVycmVkIiwiTWFpbkluZm8iLCJjbGFzc05hbWUiLCJTa2lsbHNEYXRhIiwiRnJvbnRlbmQiLCJuYW1lIiwiaGlnaGxpZ2h0IiwiRXhwZXJpZW5jZURhdGEiLCJjb21wYW55IiwiY29tcGFueUxpbmsiLCJwb3NpdGlvbiIsImRhdGVTdGFydCIsImRhdGVFbmQiLCJyZXNwb25zaWJpbGl0aWVzIiwidGVjaG5vbG9naWVzIiwiT2JqZWN0Iiwia2V5cyIsIm1hcCIsImtleSIsInNraWxsIiwiaXRlbSIsImhyZWYiLCJ0YXJnZXQiLCJ0aXRsZSIsInJlbCIsInhtbG5zIiwiZmlsbCIsInZpZXdCb3giLCJ3aWR0aCIsImhlaWdodCIsImQiLCJnb2FscyIsInRlY2hub2xvZ3kiLCJDdXJyZW50SW5mbyIsIm5hdiIsImRpc3BsYXlOYW1lIiwiZmFzdCIsInRlbnNpb24iLCJmcmljdGlvbiIsInNsb3ciLCJtYXNzIiwidHJhbnMiLCJ4IiwieSIsInRyYWlsIiwiYXBpIiwidXNlVHJhaWwiLCJpIiwieHkiLCJjb25maWciLCJyZWYiLCJsZWZ0IiwidG9wIiwiaGFuZGxlTW91c2VNb3ZlIiwiZSIsInN0YXJ0IiwiY2xpZW50WCIsImNsaWVudFkiLCJzdHlsZSIsImlkIiwiaW4iLCJyZXN1bHQiLCJzdGREZXZpYXRpb24iLCJ2YWx1ZXMiLCJvbk1vdXNlTW92ZSIsImluZGV4IiwiYW5pbWF0ZWQiLCJ0cmFuc2Zvcm0iLCJ0byIsImNoYW5nZU5hdiIsIm9uQ2xpY2tIYW5kbGVyIiwic3RvcFByb3BhZ2F0aW9uIiwicHJldmVudERlZmF1bHQiLCJvbkNsaWNrIiwiZmlsbFJ1bGUiLCJjdXJyZW50TmF2Iiwic2V0Q3VycmVudE5hdiIsInVzZVN0YXRlIiwiZG9jdW1lbnQiLCJnZXRFbGVtZW50QnlJZCIsIl9fd2VicGFja19tb2R1bGVfY2FjaGVfXyIsIl9fd2VicGFja19yZXF1aXJlX18iLCJtb2R1bGVJZCIsImNhY2hlZE1vZHVsZSIsInVuZGVmaW5lZCIsImV4cG9ydHMiLCJtb2R1bGUiLCJfX3dlYnBhY2tfbW9kdWxlc19fIiwibSIsIk8iLCJjaHVua0lkcyIsImZuIiwicHJpb3JpdHkiLCJub3RGdWxmaWxsZWQiLCJJbmZpbml0eSIsImxlbmd0aCIsImZ1bGZpbGxlZCIsImoiLCJldmVyeSIsInNwbGljZSIsInIiLCJuIiwiZ2V0dGVyIiwiX19lc01vZHVsZSIsImEiLCJkZWZpbml0aW9uIiwibyIsImRlZmluZVByb3BlcnR5IiwiZW51bWVyYWJsZSIsImdldCIsIm9iaiIsInByb3AiLCJwcm90b3R5cGUiLCJoYXNPd25Qcm9wZXJ0eSIsImNhbGwiLCJpbnN0YWxsZWRDaHVua3MiLCJjaHVua0lkIiwid2VicGFja0pzb25wQ2FsbGJhY2siLCJwYXJlbnRDaHVua0xvYWRpbmdGdW5jdGlvbiIsImRhdGEiLCJtb3JlTW9kdWxlcyIsInJ1bnRpbWUiLCJzb21lIiwiY2h1bmtMb2FkaW5nR2xvYmFsIiwic2VsZiIsImZvckVhY2giLCJiaW5kIiwicHVzaCIsIl9fd2VicGFja19leHBvcnRzX18iXSwic291cmNlUm9vdCI6IiJ9